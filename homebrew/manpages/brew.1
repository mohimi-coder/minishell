.\" generated by kramdown
.TH "BREW" "1" "June 2024" "Homebrew"
.SH NAME
brew \- The Missing Package Manager for macOS (or Linux)
.SH "SYNOPSIS"
\fBbrew\fP \fB\-\-version\fP
.br
\fBbrew\fP \fIcommand\fP [\fB\-\-verbose\fP|\fB\-v\fP] [\fIoptions\fP] [\fIformula\fP] \.\.\.
.SH "DESCRIPTION"
Homebrew is the easiest and most flexible way to install the UNIX tools Apple didn\[u2019]t include with macOS\. It can also install software not packaged for your Linux distribution without requiring \fBsudo\fP\&\.
.SH "TERMINOLOGY"
.TP
\fBformula\fP
Homebrew package definition that builds from upstream sources
.TP
\fBcask\fP
Homebrew package definition that installs macOS native applications
.TP
\fBprefix\fP
path in which Homebrew is installed, e\.g\. \fB/usr/local\fP
.TP
\fBkeg\fP
installation destination directory of a given \fBformula\fP version, e\.g\. \fB/usr/local/Cellar/foo/0\.1\fP
.TP
\fBrack\fP
directory containing one or more versioned \fBkegs\fP, e\.g\. \fB/usr/local/Cellar/foo\fP
.TP
\fBkeg\-only\fP
a \fBformula\fP is \fIkeg\-only\fP if it is not symlinked into Homebrew\[u2019]s prefix
.TP
\fBopt prefix\fP
a symlink to the active version of a \fBkeg\fP, e\.g\. \fB/usr/local/opt/foo\fP
.TP
\fBCellar\fP
directory containing one or more named \fBracks\fP, e\.g\. \fB/usr/local/Cellar\fP
.TP
\fBCaskroom\fP
directory containing one or more named \fBcasks\fP, e\.g\. \fB/usr/local/Caskroom\fP
.TP
\fBexternal command\fP
\fBbrew\fP subcommand defined outside of the Homebrew/brew GitHub repository
.TP
\fBtap\fP
directory (and usually Git repository) of \fBformulae\fP, \fBcasks\fP and/or \fBexternal commands\fP
.TP
\fBbottle\fP
pre\-built \fBkeg\fP poured into a \fBrack\fP of the \fBCellar\fP instead of building from upstream sources
.SH "ESSENTIAL COMMANDS"
For the full command list, see the \fICOMMANDS\fP section\.
.P
With \fB\-\-verbose\fP or \fB\-\-debug\fP, many commands print extra debugging information\. Note that these options should only appear after a command\.
.P
Some command behaviour can be customised with environment variables; see the \fIENVIRONMENT\fP section\.
.SS "\fBinstall\fP \fIformula\fP"
Install \fIformula\fP\&\.
.P
\fIformula\fP is usually the name of the formula to install, but it has other syntaxes which are listed in the \fISPECIFYING FORMULAE\fP section\.
.SS "\fBuninstall\fP \fIformula\fP"
Uninstall \fIformula\fP\&\.
.SS "\fBlist\fP"
List all installed formulae\.
.SS "\fBsearch\fP \fR[\fItext\fP|\fB/\fP\fItext\fP\fB/\fP]"
Perform a substring search of cask tokens and formula names for \fItext\fP\&\. If \fItext\fP is flanked by slashes, it is interpreted as a regular expression\. The search for \fItext\fP is extended online to \fBhomebrew/core\fP and \fBhomebrew/cask\fP\&\. If no search term is provided, all locally available formulae are listed\.
.SH "COMMANDS"
.SS "\fBanalytics\fP \fR[\fIsubcommand\fP]"
Control Homebrew\[u2019]s anonymous aggregate user behaviour analytics\. Read more at 
.UR https://docs\.brew\.sh/Analytics
.UE \&\.
.TP
\fBbrew analytics\fP [\fBstate\fP]
Display the current state of Homebrew\[u2019]s analytics\.
.TP
\fBbrew analytics\fP (\fBon\fP|\fBoff\fP)
Turn Homebrew\[u2019]s analytics on or off respectively\.
.SS "\fBautoremove\fP \fR[\fB\-\-dry\-run\fP]"
Uninstall formulae that were only installed as a dependency of another formula and are now no longer needed\.
.TP
\fB\-n\fP, \fB\-\-dry\-run\fP
List what would be uninstalled, but do not actually uninstall anything\.
.SS "\fBcasks\fP"
List all locally installable casks including short names\.
.SS "\fBcleanup\fP \fR[\fIoptions\fP] \fR[\fIformula\fP|\fIcask\fP \.\.\.]"
Remove stale lock files and outdated downloads for all formulae and casks, and remove old versions of installed formulae\. If arguments are specified, only do this for the given formulae and casks\. Removes all downloads more than 120 days old\. This can be adjusted with \fBHOMEBREW_CLEANUP_MAX_AGE_DAYS\fP\&\.
.TP
\fB\-\-prune\fP
Remove all cache files older than specified \fIdays\fP\&\. If you want to remove everything, use \fB\-\-prune=all\fP\&\.
.TP
\fB\-n\fP, \fB\-\-dry\-run\fP
Show what would be removed, but do not actually remove anything\.
.TP
\fB\-s\fP
Scrub the cache, including downloads for even the latest versions\. Note that downloads for any installed formulae or casks will still not be deleted\. If you want to delete those too: \fBrm \-rf "$(brew \-\-cache)"\fP
.TP
\fB\-\-prune\-prefix\fP
Only prune the symlinks and directories from the prefix and remove no other files\.
.SS "\fBcommand\fP \fIcommand\fP \fR[\.\.\.]"
Display the path to the file being used when invoking \fBbrew\fP \fIcmd\fP\&\.
.SS "\fBcommands\fP \fR[\fB\-\-quiet\fP] \fR[\fB\-\-include\-aliases\fP]"
Show lists of built\-in and external commands\.
.TP
\fB\-q\fP, \fB\-\-quiet\fP
List only the names of commands without category headers\.
.TP
\fB\-\-include\-aliases\fP
Include aliases of internal commands\.
.SS "\fBcompletions\fP \fR[\fIsubcommand\fP]"
Control whether Homebrew automatically links external tap shell completion files\. Read more at 
.UR https://docs\.brew\.sh/Shell\-Completion
.UE \&\.
.TP
\fBbrew completions\fP [\fBstate\fP]
Display the current state of Homebrew\[u2019]s completions\.
.TP
\fBbrew completions\fP (\fBlink\fP|\fBunlink\fP)
Link or unlink Homebrew\[u2019]s completions\.
.SS "\fBconfig\fP, \fB\-\-config\fP"
Show Homebrew and system configuration info useful for debugging\. If you file a bug report, you will be required to provide this information\.
.SS "\fBdeps\fP \fR[\fIoptions\fP] \fR[\fIformula\fP|\fIcask\fP \.\.\.]"
Show dependencies for \fIformula\fP\&\. When given multiple formula arguments, show the intersection of dependencies for each formula\. By default, \fBdeps\fP shows all required and recommended dependencies\.
.P
If any version of each formula argument is installed and no other options are passed, this command displays their actual runtime dependencies (similar to \fBbrew linkage\fP), which may differ from the current versions\[u2019] stated dependencies if the installed versions are outdated\.
.P
\fINote:\fP \fB\-\-missing\fP and \fB\-\-skip\-recommended\fP have precedence over \fB\-\-include\-*\fP\&\.
.TP
\fB\-n\fP, \fB\-\-topological\fP
Sort dependencies in topological order\.
.TP
\fB\-1\fP, \fB\-\-direct\fP
Show only the direct dependencies declared in the formula\.
.TP
\fB\-\-union\fP
Show the union of dependencies for multiple \fIformula\fP, instead of the intersection\.
.TP
\fB\-\-full\-name\fP
List dependencies by their full name\.
.TP
\fB\-\-include\-build\fP
Include \fB:build\fP dependencies for \fIformula\fP\&\.
.TP
\fB\-\-include\-optional\fP
Include \fB:optional\fP dependencies for \fIformula\fP\&\.
.TP
\fB\-\-include\-test\fP
Include \fB:test\fP dependencies for \fIformula\fP (non\-recursive)\.
.TP
\fB\-\-skip\-recommended\fP
Skip \fB:recommended\fP dependencies for \fIformula\fP\&\.
.TP
\fB\-\-include\-requirements\fP
Include requirements in addition to dependencies for \fIformula\fP\&\.
.TP
\fB\-\-tree\fP
Show dependencies as a tree\. When given multiple formula arguments, show individual trees for each formula\.
.TP
\fB\-\-graph\fP
Show dependencies as a directed graph\.
.TP
\fB\-\-dot\fP
Show text\-based graph description in DOT format\.
.TP
\fB\-\-annotate\fP
Mark any build, test, implicit, optional, or recommended dependencies as such in the output\.
.TP
\fB\-\-installed\fP
List dependencies for formulae that are currently installed\. If \fIformula\fP is specified, list only its dependencies that are currently installed\.
.TP
\fB\-\-missing\fP
Show only missing dependencies\.
.TP
\fB\-\-eval\-all\fP
Evaluate all available formulae and casks, whether installed or not, to list their dependencies\.
.TP
\fB\-\-for\-each\fP
Switch into the mode used by the \fB\-\-eval\-all\fP option, but only list dependencies for each provided \fIformula\fP, one formula per line\. This is used for debugging the \fB\-\-installed\fP/\fB\-\-eval\-all\fP display mode\.
.TP
\fB\-\-HEAD\fP
Show dependencies for HEAD version instead of stable version\.
.TP
\fB\-\-os\fP
Show dependencies for the given operating system\.
.TP
\fB\-\-arch\fP
Show dependencies for the given CPU architecture\.
.TP
\fB\-\-formula\fP
Treat all named arguments as formulae\.
.TP
\fB\-\-cask\fP
Treat all named arguments as casks\.
.SS "\fBdesc\fP \fR[\fIoptions\fP] \fIformula\fP|\fIcask\fP|\fItext\fP|\fB/\fP\fIregex\fP\fB/\fP \fR[\.\.\.]"
Display \fIformula\fP\[u2019]s name and one\-line description\. The cache is created on the first search, making that search slower than subsequent ones\.
.TP
\fB\-s\fP, \fB\-\-search\fP
Search both names and descriptions for \fItext\fP\&\. If \fItext\fP is flanked by slashes, it is interpreted as a regular expression\.
.TP
\fB\-n\fP, \fB\-\-name\fP
Search just names for \fItext\fP\&\. If \fItext\fP is flanked by slashes, it is interpreted as a regular expression\.
.TP
\fB\-d\fP, \fB\-\-description\fP
Search just descriptions for \fItext\fP\&\. If \fItext\fP is flanked by slashes, it is interpreted as a regular expression\.
.TP
\fB\-\-eval\-all\fP
Evaluate all available formulae and casks, whether installed or not, to search their descriptions\. Implied if \fBHOMEBREW_EVAL_ALL\fP is set\.
.TP
\fB\-\-formula\fP
Treat all named arguments as formulae\.
.TP
\fB\-\-cask\fP
Treat all named arguments as casks\.
.SS "\fBdeveloper\fP \fR[\fIsubcommand\fP]"
Control Homebrew\[u2019]s developer mode\. When developer mode is enabled, \fBbrew update\fP will update Homebrew to the latest commit on the \fBmaster\fP branch instead of the latest stable version along with some other behaviour changes\.
.TP
\fBbrew developer\fP [\fBstate\fP]
Display the current state of Homebrew\[u2019]s developer mode\.
.TP
\fBbrew developer\fP (\fBon\fP|\fBoff\fP)
Turn Homebrew\[u2019]s developer mode on or off respectively\.
.SS "\fBdocs\fP"
Open Homebrew\[u2019]s online documentation at 
.UR https://docs\.brew\.sh
.UE
in a browser\.
.SS "\fBdoctor\fP, \fBdr\fP \fR[\fB\-\-list\-checks\fP] \fR[\fB\-\-audit\-debug\fP] \fR[\fIdiagnostic_check\fP \.\.\.]"
Check your system for potential problems\. Will exit with a non\-zero status if any potential problems are found\.
.P
Please note that these warnings are just used to help the Homebrew maintainers with debugging if you file an issue\. If everything you use Homebrew for is working fine: please don\[u2019]t worry or file an issue; just ignore this\.
.TP
\fB\-\-list\-checks\fP
List all audit methods, which can be run individually if provided as arguments\.
.TP
\fB\-D\fP, \fB\-\-audit\-debug\fP
Enable debugging and profiling of audit methods\.
.SS "\fBfetch\fP \fR[\fIoptions\fP] \fIformula\fP|\fIcask\fP \fR[\.\.\.]"
Download a bottle (if available) or source packages for \fIformula\fPe and binaries for \fIcask\fPs\. For files, also print SHA\-256 checksums\.
.TP
\fB\-\-os\fP
Download for the given operating system\. (Pass \fBall\fP to download for all operating systems\.)
.TP
\fB\-\-arch\fP
Download for the given CPU architecture\. (Pass \fBall\fP to download for all architectures\.)
.TP
\fB\-\-bottle\-tag\fP
Download a bottle for given tag\.
.TP
\fB\-\-HEAD\fP
Fetch HEAD version instead of stable version\.
.TP
\fB\-f\fP, \fB\-\-force\fP
Remove a previously cached version and re\-fetch\.
.TP
\fB\-v\fP, \fB\-\-verbose\fP
Do a verbose VCS checkout, if the URL represents a VCS\. This is useful for seeing if an existing VCS cache has been updated\.
.TP
\fB\-\-retry\fP
Retry if downloading fails or re\-download if the checksum of a previously cached version no longer matches\. Tries at most 5 times with exponential backoff\.
.TP
\fB\-\-deps\fP
Also download dependencies for any listed \fIformula\fP\&\.
.TP
\fB\-s\fP, \fB\-\-build\-from\-source\fP
Download source packages rather than a bottle\.
.TP
\fB\-\-build\-bottle\fP
Download source packages (for eventual bottling) rather than a bottle\.
.TP
\fB\-\-force\-bottle\fP
Download a bottle if it exists for the current or newest version of macOS, even if it would not be used during installation\.
.TP
\fB\-\-[no\-]quarantine\fP
Disable/enable quarantining of downloads (default: enabled)\.
.TP
\fB\-\-formula\fP
Treat all named arguments as formulae\.
.TP
\fB\-\-cask\fP
Treat all named arguments as casks\.
.SS "\fBformulae\fP"
List all locally installable formulae including short names\.
.SS "\fBgist\-logs\fP \fR[\fIoptions\fP] \fIformula\fP"
Upload logs for a failed build of \fIformula\fP to a new Gist\. Presents an error message if no logs are found\.
.TP
\fB\-\-with\-hostname\fP
Include the hostname in the Gist\.
.TP
\fB\-n\fP, \fB\-\-new\-issue\fP
Automatically create a new issue in the appropriate GitHub repository after creating the Gist\.
.TP
\fB\-p\fP, \fB\-\-private\fP
The Gist will be marked private and will not appear in listings but will be accessible with its link\.
.SS "\fBhelp\fP \fR[\fIcommand\fP \.\.\.]"
Outputs the usage instructions for \fBbrew\fP \fIcommand\fP\&\. Equivalent to \fBbrew \-\-help\fP \fIcommand\fP\&\.
.SS "\fBhome\fP, \fBhomepage\fP \fR[\fB\-\-formula\fP] \fR[\fB\-\-cask\fP] \fR[\fIformula\fP|\fIcask\fP \.\.\.]"
Open a \fIformula\fP or \fIcask\fP\[u2019]s homepage in a browser, or open Homebrew\[u2019]s own homepage if no argument is provided\.
.TP
\fB\-\-formula\fP
Treat all named arguments as formulae\.
.TP
\fB\-\-cask\fP
Treat all named arguments as casks\.
.SS "\fBinfo\fP, \fBabv\fP \fR[\fIoptions\fP] \fR[\fIformula\fP|\fIcask\fP \.\.\.]"
Display brief statistics for your Homebrew installation\. If a \fIformula\fP or \fIcask\fP is provided, show summary of information about it\.
.TP
\fB\-\-analytics\fP
List global Homebrew analytics data or, if specified, installation and build error data for \fIformula\fP (provided neither \fBHOMEBREW_NO_ANALYTICS\fP nor \fBHOMEBREW_NO_GITHUB_API\fP are set)\.
.TP
\fB\-\-days\fP
How many days of analytics data to retrieve\. The value for \fIdays\fP must be \fB30\fP, \fB90\fP or \fB365\fP\&\. The default is \fB30\fP\&\.
.TP
\fB\-\-category\fP
Which type of analytics data to retrieve\. The value for \fIcategory\fP must be \fBinstall\fP, \fBinstall\-on\-request\fP or \fBbuild\-error\fP; \fBcask\-install\fP or \fBos\-version\fP may be specified if \fIformula\fP is not\. The default is \fBinstall\fP\&\.
.TP
\fB\-\-github\fP
Open the GitHub source page for \fIformula\fP and \fIcask\fP in a browser\. To view the history locally: \fBbrew log \-p\fP \fIformula\fP or \fIcask\fP
.TP
\fB\-\-json\fP
Print a JSON representation\. Currently the default value for \fIversion\fP is \fBv1\fP for \fIformula\fP\&\. For \fIformula\fP and \fIcask\fP use \fBv2\fP\&\. See the docs for examples of using the JSON output: 
.UR https://docs\.brew\.sh/Querying\-Brew
.UE
.TP
\fB\-\-installed\fP
Print JSON of formulae that are currently installed\.
.TP
\fB\-\-eval\-all\fP
Evaluate all available formulae and casks, whether installed or not, to print their JSON\. Implied if \fBHOMEBREW_EVAL_ALL\fP is set\.
.TP
\fB\-\-variations\fP
Include the variations hash in each formula\[u2019]s JSON output\.
.TP
\fB\-v\fP, \fB\-\-verbose\fP
Show more verbose analytics data for \fIformula\fP\&\.
.TP
\fB\-\-formula\fP
Treat all named arguments as formulae\.
.TP
\fB\-\-cask\fP
Treat all named arguments as casks\.
.SS "\fBinstall\fP \fR[\fIoptions\fP] \fIformula\fP|\fIcask\fP \fR[\.\.\.]"
Install a \fIformula\fP or \fIcask\fP\&\. Additional options specific to a \fIformula\fP may be appended to the command\.
.P
Unless \fBHOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK\fP is set, \fBbrew upgrade\fP or \fBbrew reinstall\fP will be run for outdated dependents and dependents with broken linkage, respectively\.
.P
Unless \fBHOMEBREW_NO_INSTALL_CLEANUP\fP is set, \fBbrew cleanup\fP will then be run for the installed formulae or, every 30 days, for all formulae\.
.P
Unless \fBHOMEBREW_NO_INSTALL_UPGRADE\fP is set, \fBbrew install\fP \fIformula\fP will upgrade \fIformula\fP if it is already installed but outdated\.
.TP
\fB\-d\fP, \fB\-\-debug\fP
If brewing fails, open an interactive debugging session with access to IRB or a shell inside the temporary build directory\.
.TP
\fB\-\-display\-times\fP
Print install times for each package at the end of the run\.
.TP
\fB\-f\fP, \fB\-\-force\fP
Install formulae without checking for previously installed keg\-only or non\-migrated versions\. When installing casks, overwrite existing files (binaries and symlinks are excluded, unless originally from the same cask)\.
.TP
\fB\-v\fP, \fB\-\-verbose\fP
Print the verification and post\-install steps\.
.TP
\fB\-n\fP, \fB\-\-dry\-run\fP
Show what would be installed, but do not actually install anything\.
.TP
\fB\-\-formula\fP
Treat all named arguments as formulae\.
.TP
\fB\-\-ignore\-dependencies\fP
An unsupported Homebrew development option to skip installing any dependencies of any kind\. If the dependencies are not already present, the formula will have issues\. If you\[u2019]re not developing Homebrew, consider adjusting your PATH rather than using this option\.
.TP
\fB\-\-only\-dependencies\fP
Install the dependencies with specified options but do not install the formula itself\.
.TP
\fB\-\-cc\fP
Attempt to compile using the specified \fIcompiler\fP, which should be the name of the compiler\[u2019]s executable, e\.g\. \fBgcc\-7\fP for GCC 7\. In order to use LLVM\[u2019]s clang, specify \fBllvm_clang\fP\&\. To use the Apple\-provided clang, specify \fBclang\fP\&\. This option will only accept compilers that are provided by Homebrew or bundled with macOS\. Please do not file issues if you encounter errors while using this option\.
.TP
\fB\-s\fP, \fB\-\-build\-from\-source\fP
Compile \fIformula\fP from source even if a bottle is provided\. Dependencies will still be installed from bottles if they are available\.
.TP
\fB\-\-force\-bottle\fP
Install from a bottle if it exists for the current or newest version of macOS, even if it would not normally be used for installation\.
.TP
\fB\-\-include\-test\fP
Install testing dependencies required to run \fBbrew test\fP \fIformula\fP\&\.
.TP
\fB\-\-HEAD\fP
If \fIformula\fP defines it, install the HEAD version, aka\. main, trunk, unstable, master\.
.TP
\fB\-\-fetch\-HEAD\fP
Fetch the upstream repository to detect if the HEAD installation of the formula is outdated\. Otherwise, the repository\[u2019]s HEAD will only be checked for updates when a new stable or development version has been released\.
.TP
\fB\-\-keep\-tmp\fP
Retain the temporary files created during installation\.
.TP
\fB\-\-debug\-symbols\fP
Generate debug symbols on build\. Source will be retained in a cache directory\.
.TP
\fB\-\-build\-bottle\fP
Prepare the formula for eventual bottling during installation, skipping any post\-install steps\.
.TP
\fB\-\-skip\-post\-install\fP
Install but skip any post\-install steps\.
.TP
\fB\-\-bottle\-arch\fP
Optimise bottles for the specified architecture rather than the oldest architecture supported by the version of macOS the bottles are built on\.
.TP
\fB\-i\fP, \fB\-\-interactive\fP
Download and patch \fIformula\fP, then open a shell\. This allows the user to run \fB\&\./configure \-\-help\fP and otherwise determine how to turn the software package into a Homebrew package\.
.TP
\fB\-g\fP, \fB\-\-git\fP
Create a Git repository, useful for creating patches to the software\.
.TP
\fB\-\-overwrite\fP
Delete files that already exist in the prefix while linking\.
.TP
\fB\-\-cask\fP
Treat all named arguments as casks\.
.TP
\fB\-\-[no\-]binaries\fP
Disable/enable linking of helper executables (default: enabled)\.
.TP
\fB\-\-require\-sha\fP
Require all casks to have a checksum\.
.TP
\fB\-\-[no\-]quarantine\fP
Disable/enable quarantining of downloads (default: enabled)\.
.TP
\fB\-\-adopt\fP
Adopt existing artifacts in the destination that are identical to those being installed\. Cannot be combined with \fB\-\-force\fP\&\.
.TP
\fB\-\-skip\-cask\-deps\fP
Skip installing cask dependencies\.
.TP
\fB\-\-zap\fP
For use with \fBbrew reinstall \-\-cask\fP\&\. Remove all files associated with a cask\. \fIMay remove files which are shared between applications\.\fP
.SS "\fBleaves\fP \fR[\fB\-\-installed\-on\-request\fP] \fR[\fB\-\-installed\-as\-dependency\fP]"
List installed formulae that are not dependencies of another installed formula or cask\.
.TP
\fB\-r\fP, \fB\-\-installed\-on\-request\fP
Only list leaves that were manually installed\.
.TP
\fB\-p\fP, \fB\-\-installed\-as\-dependency\fP
Only list leaves that were installed as dependencies\.
.SS "\fBlink\fP, \fBln\fP \fR[\fIoptions\fP] \fIinstalled_formula\fP \fR[\.\.\.]"
Symlink all of \fIformula\fP\[u2019]s installed files into Homebrew\[u2019]s prefix\. This is done automatically when you install formulae but can be useful for manual installations\.
.TP
\fB\-\-overwrite\fP
Delete files that already exist in the prefix while linking\.
.TP
\fB\-n\fP, \fB\-\-dry\-run\fP
List files which would be linked or deleted by \fBbrew link \-\-overwrite\fP without actually linking or deleting any files\.
.TP
\fB\-f\fP, \fB\-\-force\fP
Allow keg\-only formulae to be linked\.
.TP
\fB\-\-HEAD\fP
Link the HEAD version of the formula if it is installed\.
.SS "\fBlist\fP, \fBls\fP \fR[\fIoptions\fP] \fR[\fIinstalled_formula\fP|\fIinstalled_cask\fP \.\.\.]"
List all installed formulae and casks\. If \fIformula\fP is provided, summarise the paths within its current keg\. If \fIcask\fP is provided, list its artifacts\.
.TP
\fB\-\-formula\fP
List only formulae, or treat all named arguments as formulae\.
.TP
\fB\-\-cask\fP
List only casks, or treat all named arguments as casks\.
.TP
\fB\-\-full\-name\fP
Print formulae with fully\-qualified names\. Unless \fB\-\-full\-name\fP, \fB\-\-versions\fP or \fB\-\-pinned\fP are passed, other options (i\.e\. \fB\-1\fP, \fB\-l\fP, \fB\-r\fP and \fB\-t\fP) are passed to \fBls\fP(1) which produces the actual output\.
.TP
\fB\-\-versions\fP
Show the version number for installed formulae, or only the specified formulae if \fIformula\fP are provided\.
.TP
\fB\-\-multiple\fP
Only show formulae with multiple versions installed\.
.TP
\fB\-\-pinned\fP
List only pinned formulae, or only the specified (pinned) formulae if \fIformula\fP are provided\. See also \fBpin\fP, \fBunpin\fP\&\.
.TP
\fB\-\-installed\-on\-request\fP
List the formulae installed on request\.
.TP
\fB\-\-installed\-as\-dependency\fP
List the formulae installed as dependencies\.
.TP
\fB\-1\fP
Force output to be one entry per line\. This is the default when output is not to a terminal\.
.TP
\fB\-l\fP
List formulae and/or casks in long format\. Has no effect when a formula or cask name is passed as an argument\.
.TP
\fB\-r\fP
Reverse the order of the formulae and/or casks sort to list the oldest entries first\. Has no effect when a formula or cask name is passed as an argument\.
.TP
\fB\-t\fP
Sort formulae and/or casks by time modified, listing most recently modified first\. Has no effect when a formula or cask name is passed as an argument\.
.SS "\fBlog\fP \fR[\fIoptions\fP] \fR[\fIformula\fP|\fIcask\fP]"
Show the \fBgit log\fP for \fIformula\fP or \fIcask\fP, or show the log for the Homebrew repository if no formula or cask is provided\.
.TP
\fB\-p\fP, \fB\-\-patch\fP
Also print patch from commit\.
.TP
\fB\-\-stat\fP
Also print diffstat from commit\.
.TP
\fB\-\-oneline\fP
Print only one line per commit\.
.TP
\fB\-1\fP
Print only one commit\.
.TP
\fB\-n\fP, \fB\-\-max\-count\fP
Print only a specified number of commits\.
.TP
\fB\-\-formula\fP
Treat all named arguments as formulae\.
.TP
\fB\-\-cask\fP
Treat all named arguments as casks\.
.SS "\fBmigrate\fP \fR[\fIoptions\fP] \fIinstalled_formula\fP|\fIinstalled_cask\fP \fR[\.\.\.]"
Migrate renamed packages to new names, where \fIformula\fP are old names of packages\.
.TP
\fB\-f\fP, \fB\-\-force\fP
Treat installed \fIformula\fP and provided \fIformula\fP as if they are from the same taps and migrate them anyway\.
.TP
\fB\-n\fP, \fB\-\-dry\-run\fP
Show what would be migrated, but do not actually migrate anything\.
.TP
\fB\-\-formula\fP
Only migrate formulae\.
.TP
\fB\-\-cask\fP
Only migrate casks\.
.SS "\fBmissing\fP \fR[\fB\-\-hide=\fP] \fR[\fIformula\fP \.\.\.]"
Check the given \fIformula\fP kegs for missing dependencies\. If no \fIformula\fP are provided, check all kegs\. Will exit with a non\-zero status if any kegs are found to be missing dependencies\.
.TP
\fB\-\-hide\fP
Act as if none of the specified \fIhidden\fP are installed\. \fIhidden\fP should be a comma\-separated list of formulae\.
.SS "\fBnodenv\-sync\fP"
Create symlinks for Homebrew\[u2019]s installed NodeJS versions in \fB~/\.nodenv/versions\fP\&\.
.P
Note that older version symlinks will also be created so e\.g\. NodeJS 19\.1\.0 will also be symlinked to 19\.0\.0\.
.SS "\fBoptions\fP \fR[\fIoptions\fP] \fR[\fIformula\fP \.\.\.]"
Show install options specific to \fIformula\fP\&\.
.TP
\fB\-\-compact\fP
Show all options on a single line separated by spaces\.
.TP
\fB\-\-installed\fP
Show options for formulae that are currently installed\.
.TP
\fB\-\-eval\-all\fP
Evaluate all available formulae and casks, whether installed or not, to show their options\.
.TP
\fB\-\-command\fP
Show options for the specified \fIcommand\fP\&\.
.SS "\fBoutdated\fP \fR[\fIoptions\fP] \fR[\fIformula\fP|\fIcask\fP \.\.\.]"
List installed casks and formulae that have an updated version available\. By default, version information is displayed in interactive shells and suppressed otherwise\.
.TP
\fB\-q\fP, \fB\-\-quiet\fP
List only the names of outdated kegs (takes precedence over \fB\-\-verbose\fP)\.
.TP
\fB\-v\fP, \fB\-\-verbose\fP
Include detailed version information\.
.TP
\fB\-\-formula\fP
List only outdated formulae\.
.TP
\fB\-\-cask\fP
List only outdated casks\.
.TP
\fB\-\-json\fP
Print output in JSON format\. There are two versions: \fBv1\fP and \fBv2\fP\&\. \fBv1\fP is deprecated and is currently the default if no version is specified\. \fBv2\fP prints outdated formulae and casks\.
.TP
\fB\-\-fetch\-HEAD\fP
Fetch the upstream repository to detect if the HEAD installation of the formula is outdated\. Otherwise, the repository\[u2019]s HEAD will only be checked for updates when a new stable or development version has been released\.
.TP
\fB\-g\fP, \fB\-\-greedy\fP
Also include outdated casks with \fBauto_updates true\fP or \fBversion :latest\fP\&\.
.TP
\fB\-\-greedy\-latest\fP
Also include outdated casks including those with \fBversion :latest\fP\&\.
.TP
\fB\-\-greedy\-auto\-updates\fP
Also include outdated casks including those with \fBauto_updates true\fP\&\.
.SS "\fBpin\fP \fIinstalled_formula\fP \fR[\.\.\.]"
Pin the specified \fIformula\fP, preventing them from being upgraded when issuing the \fBbrew upgrade\fP \fIformula\fP command\. See also \fBunpin\fP\&\.
.P
\fINote:\fP Other packages which depend on newer versions of a pinned formula might not install or run correctly\.
.SS "\fBpostinstall\fP, \fBpost_install\fP \fIinstalled_formula\fP \fR[\.\.\.]"
Rerun the post\-install steps for \fIformula\fP\&\.
.SS "\fBpyenv\-sync\fP"
Create symlinks for Homebrew\[u2019]s installed Python versions in \fB~/\.pyenv/versions\fP\&\.
.P
Note that older patch version symlinks will be created and linked to the minor version so e\.g\. Python 3\.11\.0 will also be symlinked to 3\.11\.3\.
.SS "\fBrbenv\-sync\fP"
Create symlinks for Homebrew\[u2019]s installed Ruby versions in \fB~/\.rbenv/versions\fP\&\.
.P
Note that older version symlinks will also be created so e\.g\. Ruby 3\.2\.1 will also be symlinked to 3\.2\.0\.
.SS "\fBreadall\fP \fR[\fIoptions\fP] \fR[\fItap\fP \.\.\.]"
Import all items from the specified \fItap\fP, or from all installed taps if none is provided\. This can be useful for debugging issues across all items when making significant changes to \fBformula\.rb\fP, testing the performance of loading all items or checking if any current formulae/casks have Ruby issues\.
.TP
\fB\-\-os\fP
Read using the given operating system\. (Pass \fBall\fP to simulate all operating systems\.)
.TP
\fB\-\-arch\fP
Read using the given CPU architecture\. (Pass \fBall\fP to simulate all architectures\.)
.TP
\fB\-\-aliases\fP
Verify any alias symlinks in each tap\.
.TP
\fB\-\-syntax\fP
Syntax\-check all of Homebrew\[u2019]s Ruby files (if no \fItap\fP is passed)\.
.TP
\fB\-\-eval\-all\fP
Evaluate all available formulae and casks, whether installed or not\. Implied if \fBHOMEBREW_EVAL_ALL\fP is set\.
.TP
\fB\-\-no\-simulate\fP
Don\[u2019]t simulate other system configurations when checking formulae and casks\.
.SS "\fBreinstall\fP \fR[\fIoptions\fP] \fIformula\fP|\fIcask\fP \fR[\.\.\.]"
Uninstall and then reinstall a \fIformula\fP or \fIcask\fP using the same options it was originally installed with, plus any appended options specific to a \fIformula\fP\&\.
.P
Unless \fBHOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK\fP is set, \fBbrew upgrade\fP or \fBbrew reinstall\fP will be run for outdated dependents and dependents with broken linkage, respectively\.
.P
Unless \fBHOMEBREW_NO_INSTALL_CLEANUP\fP is set, \fBbrew cleanup\fP will then be run for the reinstalled formulae or, every 30 days, for all formulae\.
.TP
\fB\-d\fP, \fB\-\-debug\fP
If brewing fails, open an interactive debugging session with access to IRB or a shell inside the temporary build directory\.
.TP
\fB\-\-display\-times\fP
Print install times for each package at the end of the run\.
.TP
\fB\-f\fP, \fB\-\-force\fP
Install without checking for previously installed keg\-only or non\-migrated versions\.
.TP
\fB\-v\fP, \fB\-\-verbose\fP
Print the verification and post\-install steps\.
.TP
\fB\-\-formula\fP
Treat all named arguments as formulae\.
.TP
\fB\-s\fP, \fB\-\-build\-from\-source\fP
Compile \fIformula\fP from source even if a bottle is available\.
.TP
\fB\-i\fP, \fB\-\-interactive\fP
Download and patch \fIformula\fP, then open a shell\. This allows the user to run \fB\&\./configure \-\-help\fP and otherwise determine how to turn the software package into a Homebrew package\.
.TP
\fB\-\-force\-bottle\fP
Install from a bottle if it exists for the current or newest version of macOS, even if it would not normally be used for installation\.
.TP
\fB\-\-keep\-tmp\fP
Retain the temporary files created during installation\.
.TP
\fB\-\-debug\-symbols\fP
Generate debug symbols on build\. Source will be retained in a cache directory\.
.TP
\fB\-g\fP, \fB\-\-git\fP
Create a Git repository, useful for creating patches to the software\.
.TP
\fB\-\-cask\fP
Treat all named arguments as casks\.
.TP
\fB\-\-[no\-]binaries\fP
Disable/enable linking of helper executables (default: enabled)\.
.TP
\fB\-\-require\-sha\fP
Require all casks to have a checksum\.
.TP
\fB\-\-[no\-]quarantine\fP
Disable/enable quarantining of downloads (default: enabled)\.
.TP
\fB\-\-adopt\fP
Adopt existing artifacts in the destination that are identical to those being installed\. Cannot be combined with \fB\-\-force\fP\&\.
.TP
\fB\-\-skip\-cask\-deps\fP
Skip installing cask dependencies\.
.TP
\fB\-\-zap\fP
For use with \fBbrew reinstall \-\-cask\fP\&\. Remove all files associated with a cask\. \fIMay remove files which are shared between applications\.\fP
.SS "\fBsearch\fP, \fB\-S\fP \fR[\fIoptions\fP] \fItext\fP|\fB/\fP\fIregex\fP\fB/\fP \fR[\.\.\.]"
Perform a substring search of cask tokens and formula names for \fItext\fP\&\. If \fItext\fP is flanked by slashes, it is interpreted as a regular expression\.
.TP
\fB\-\-formula\fP
Search for formulae\.
.TP
\fB\-\-cask\fP
Search for casks\.
.TP
\fB\-\-desc\fP
Search for formulae with a description matching \fItext\fP and casks with a name or description matching \fItext\fP\&\.
.TP
\fB\-\-eval\-all\fP
Evaluate all available formulae and casks, whether installed or not, to search their descriptions\. Implied if \fBHOMEBREW_EVAL_ALL\fP is set\.
.TP
\fB\-\-pull\-request\fP
Search for GitHub pull requests containing \fItext\fP\&\.
.TP
\fB\-\-open\fP
Search for only open GitHub pull requests\.
.TP
\fB\-\-closed\fP
Search for only closed GitHub pull requests\.
.TP
\fB\-\-repology\fP
Search for \fItext\fP in the given database\.
.TP
\fB\-\-macports\fP
Search for \fItext\fP in the given database\.
.TP
\fB\-\-fink\fP
Search for \fItext\fP in the given database\.
.TP
\fB\-\-opensuse\fP
Search for \fItext\fP in the given database\.
.TP
\fB\-\-fedora\fP
Search for \fItext\fP in the given database\.
.TP
\fB\-\-archlinux\fP
Search for \fItext\fP in the given database\.
.TP
\fB\-\-debian\fP
Search for \fItext\fP in the given database\.
.TP
\fB\-\-ubuntu\fP
Search for \fItext\fP in the given database\.
.SS "\fBsetup\-ruby \fR[command]\fP"
Installs and configures Homebrew\[u2019]s Ruby\. If \fBcommand\fP is passed, it will only run Bundler if necessary for that command\.
.SS "\fBshellenv \fR[bash|csh|fish|pwsh|sh|tcsh|zsh]\fP"
Print export statements\. When run in a shell, this installation of Homebrew will be added to your \fBPATH\fP, \fBMANPATH\fP, and \fBINFOPATH\fP\&\.
.P
The variables \fBHOMEBREW_PREFIX\fP, \fBHOMEBREW_CELLAR\fP and \fBHOMEBREW_REPOSITORY\fP are also exported to avoid querying them multiple times\. To help guarantee idempotence, this command produces no output when Homebrew\[u2019]s \fBbin\fP and \fBsbin\fP directories are first and second respectively in your \fBPATH\fP\&\. Consider adding evaluation of this command\[u2019]s output to your dotfiles (e\.g\. \fB~/\.bash_profile\fP or \fB~/\.zprofile\fP on macOS and \fB~/\.bashrc\fP or \fB~/\.zshrc\fP on Linux) with: \fBeval "$(brew shellenv)"\fP
.P
The shell can be specified explicitly with a supported shell name parameter\. Unknown shells will output POSIX exports\.
.SS "\fBtap\fP \fR[\fIoptions\fP] \fR[\fIuser\fP\fB/\fP\fIrepo\fP] \fR[\fIURL\fP]"
Tap a formula repository\. If no arguments are provided, list all installed taps\.
.P
With \fIURL\fP unspecified, tap a formula repository from GitHub using HTTPS\. Since so many taps are hosted on GitHub, this command is a shortcut for \fBbrew tap\fP \fIuser\fP\fB/\fP\fIrepo\fP \fBhttps://github\.com/\fP\fIuser\fP\fB/homebrew\-\fP\fIrepo\fP\&\.
.P
With \fIURL\fP specified, tap a formula repository from anywhere, using any transport protocol that \fBgit\fP(1) handles\. The one\-argument form of \fBtap\fP simplifies but also limits\. This two\-argument command makes no assumptions, so taps can be cloned from places other than GitHub and using protocols other than HTTPS, e\.g\. SSH, git, HTTP, FTP(S), rsync\.
.TP
\fB\-\-custom\-remote\fP
Install or change a tap with a custom remote\. Useful for mirrors\.
.TP
\fB\-\-repair\fP
Migrate tapped formulae from symlink\-based to directory\-based structure\.
.TP
\fB\-\-eval\-all\fP
Evaluate all the formulae, casks and aliases in the new tap to check validity\. Implied if \fBHOMEBREW_EVAL_ALL\fP is set\.
.TP
\fB\-\-force\fP
Force install core taps even under API mode\.
.SS "\fBtap\-info\fP \fR[\fB\-\-installed\fP] \fR[\fB\-\-json\fP] \fR[\fItap\fP \.\.\.]"
Show detailed information about one or more \fItap\fPs\. If no \fItap\fP names are provided, display brief statistics for all installed taps\.
.TP
\fB\-\-installed\fP
Show information on each installed tap\.
.TP
\fB\-\-json\fP
Print a JSON representation of \fItap\fP\&\. Currently the default and only accepted value for \fIversion\fP is \fBv1\fP\&\. See the docs for examples of using the JSON output: 
.UR https://docs\.brew\.sh/Querying\-Brew
.UE
.SS "\fBuninstall\fP, \fBremove\fP, \fBrm\fP \fR[\fIoptions\fP] \fIinstalled_formula\fP|\fIinstalled_cask\fP \fR[\.\.\.]"
Uninstall a \fIformula\fP or \fIcask\fP\&\.
.TP
\fB\-f\fP, \fB\-\-force\fP
Delete all installed versions of \fIformula\fP\&\. Uninstall even if \fIcask\fP is not installed, overwrite existing files and ignore errors when removing files\.
.TP
\fB\-\-zap\fP
Remove all files associated with a \fIcask\fP\&\. \fIMay remove files which are shared between applications\.\fP
.TP
\fB\-\-ignore\-dependencies\fP
Don\[u2019]t fail uninstall, even if \fIformula\fP is a dependency of any installed formulae\.
.TP
\fB\-\-formula\fP
Treat all named arguments as formulae\.
.TP
\fB\-\-cask\fP
Treat all named arguments as casks\.
.SS "\fBunlink\fP \fR[\fB\-\-dry\-run\fP] \fIinstalled_formula\fP \fR[\.\.\.]"
Remove symlinks for \fIformula\fP from Homebrew\[u2019]s prefix\. This can be useful for temporarily disabling a formula: \fBbrew unlink\fP \fIformula\fP \fB&&\fP \fIcommands\fP \fB&& brew link\fP \fIformula\fP
.TP
\fB\-n\fP, \fB\-\-dry\-run\fP
List files which would be unlinked without actually unlinking or deleting any files\.
.SS "\fBunpin\fP \fIinstalled_formula\fP \fR[\.\.\.]"
Unpin \fIformula\fP, allowing them to be upgraded by \fBbrew upgrade\fP \fIformula\fP\&\. See also \fBpin\fP\&\.
.SS "\fBuntap\fP \fR[\fB\-\-force\fP] \fItap\fP \fR[\.\.\.]"
Remove a tapped formula repository\.
.TP
\fB\-f\fP, \fB\-\-force\fP
Untap even if formulae or casks from this tap are currently installed\.
.SS "\fBupdate\fP \fR[\fIoptions\fP]"
Fetch the newest version of Homebrew and all formulae from GitHub using \fBgit\fP(1) and perform any necessary migrations\.
.TP
\fB\-\-merge\fP
Use \fBgit merge\fP to apply updates (rather than \fBgit rebase\fP)\.
.TP
\fB\-\-auto\-update\fP
Run on auto\-updates (e\.g\. before \fBbrew install\fP)\. Skips some slower steps\.
.TP
\fB\-f\fP, \fB\-\-force\fP
Always do a slower, full update check (even if unnecessary)\.
.SS "\fBupdate\-reset\fP \fR[\fIpath\-to\-tap\-repository\fP \.\.\.]"
Fetch and reset Homebrew and all tap repositories (or any specified \fIrepository\fP) using \fBgit\fP(1) to their latest \fBorigin/HEAD\fP\&\.
.P
\fINote:\fP this will destroy all your uncommitted or committed changes\.
.SS "\fBupgrade\fP \fR[\fIoptions\fP] \fR[\fIinstalled_formula\fP|\fIinstalled_cask\fP \.\.\.]"
Upgrade outdated casks and outdated, unpinned formulae using the same options they were originally installed with, plus any appended brew formula options\. If \fIcask\fP or \fIformula\fP are specified, upgrade only the given \fIcask\fP or \fIformula\fP kegs (unless they are pinned; see \fBpin\fP, \fBunpin\fP)\.
.P
Unless \fBHOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK\fP is set, \fBbrew upgrade\fP or \fBbrew reinstall\fP will be run for outdated dependents and dependents with broken linkage, respectively\.
.P
Unless \fBHOMEBREW_NO_INSTALL_CLEANUP\fP is set, \fBbrew cleanup\fP will then be run for the upgraded formulae or, every 30 days, for all formulae\.
.TP
\fB\-d\fP, \fB\-\-debug\fP
If brewing fails, open an interactive debugging session with access to IRB or a shell inside the temporary build directory\.
.TP
\fB\-\-display\-times\fP
Print install times for each package at the end of the run\.
.TP
\fB\-f\fP, \fB\-\-force\fP
Install formulae without checking for previously installed keg\-only or non\-migrated versions\. When installing casks, overwrite existing files (binaries and symlinks are excluded, unless originally from the same cask)\.
.TP
\fB\-v\fP, \fB\-\-verbose\fP
Print the verification and post\-install steps\.
.TP
\fB\-n\fP, \fB\-\-dry\-run\fP
Show what would be upgraded, but do not actually upgrade anything\.
.TP
\fB\-\-formula\fP
Treat all named arguments as formulae\. If no named arguments are specified, upgrade only outdated formulae\.
.TP
\fB\-s\fP, \fB\-\-build\-from\-source\fP
Compile \fIformula\fP from source even if a bottle is available\.
.TP
\fB\-i\fP, \fB\-\-interactive\fP
Download and patch \fIformula\fP, then open a shell\. This allows the user to run \fB\&\./configure \-\-help\fP and otherwise determine how to turn the software package into a Homebrew package\.
.TP
\fB\-\-force\-bottle\fP
Install from a bottle if it exists for the current or newest version of macOS, even if it would not normally be used for installation\.
.TP
\fB\-\-fetch\-HEAD\fP
Fetch the upstream repository to detect if the HEAD installation of the formula is outdated\. Otherwise, the repository\[u2019]s HEAD will only be checked for updates when a new stable or development version has been released\.
.TP
\fB\-\-keep\-tmp\fP
Retain the temporary files created during installation\.
.TP
\fB\-\-debug\-symbols\fP
Generate debug symbols on build\. Source will be retained in a cache directory\.
.TP
\fB\-\-overwrite\fP
Delete files that already exist in the prefix while linking\.
.TP
\fB\-\-cask\fP
Treat all named arguments as casks\. If no named arguments are specified, upgrade only outdated casks\.
.TP
\fB\-\-skip\-cask\-deps\fP
Skip installing cask dependencies\.
.TP
\fB\-g\fP, \fB\-\-greedy\fP
Also include casks with \fBauto_updates true\fP or \fBversion :latest\fP\&\.
.TP
\fB\-\-greedy\-latest\fP
Also include casks with \fBversion :latest\fP\&\.
.TP
\fB\-\-greedy\-auto\-updates\fP
Also include casks with \fBauto_updates true\fP\&\.
.TP
\fB\-\-[no\-]binaries\fP
Disable/enable linking of helper executables (default: enabled)\.
.TP
\fB\-\-require\-sha\fP
Require all casks to have a checksum\.
.TP
\fB\-\-[no\-]quarantine\fP
Disable/enable quarantining of downloads (default: enabled)\.
.SS "\fBuses\fP \fR[\fIoptions\fP] \fIformula\fP \fR[\.\.\.]"
Show formulae and casks that specify \fIformula\fP as a dependency; that is, show dependents of \fIformula\fP\&\. When given multiple formula arguments, show the intersection of formulae that use \fIformula\fP\&\. By default, \fBuses\fP shows all formulae and casks that specify \fIformula\fP as a required or recommended dependency for their stable builds\.
.P
\fINote:\fP \fB\-\-missing\fP and \fB\-\-skip\-recommended\fP have precedence over \fB\-\-include\-*\fP\&\.
.TP
\fB\-\-recursive\fP
Resolve more than one level of dependencies\.
.TP
\fB\-\-installed\fP
Only list formulae and casks that are currently installed\.
.TP
\fB\-\-missing\fP
Only list formulae and casks that are not currently installed\.
.TP
\fB\-\-eval\-all\fP
Evaluate all available formulae and casks, whether installed or not, to show their dependents\.
.TP
\fB\-\-include\-build\fP
Include formulae that specify \fIformula\fP as a \fB:build\fP dependency\.
.TP
\fB\-\-include\-test\fP
Include formulae that specify \fIformula\fP as a \fB:test\fP dependency\.
.TP
\fB\-\-include\-optional\fP
Include formulae that specify \fIformula\fP as an \fB:optional\fP dependency\.
.TP
\fB\-\-skip\-recommended\fP
Skip all formulae that specify \fIformula\fP as a \fB:recommended\fP dependency\.
.TP
\fB\-\-formula\fP
Include only formulae\.
.TP
\fB\-\-cask\fP
Include only casks\.
.SS "\fB\-\-cache\fP \fR[\fIoptions\fP] \fR[\fIformula\fP|\fIcask\fP \.\.\.]"
Display Homebrew\[u2019]s download cache\. See also \fBHOMEBREW_CACHE\fP\&\.
.P
If \fIformula\fP is provided, display the file or directory used to cache \fIformula\fP\&\.
.TP
\fB\-\-os\fP
Show cache file for the given operating system\. (Pass \fBall\fP to show cache files for all operating systems\.)
.TP
\fB\-\-arch\fP
Show cache file for the given CPU architecture\. (Pass \fBall\fP to show cache files for all architectures\.)
.TP
\fB\-s\fP, \fB\-\-build\-from\-source\fP
Show the cache file used when building from source\.
.TP
\fB\-\-force\-bottle\fP
Show the cache file used when pouring a bottle\.
.TP
\fB\-\-bottle\-tag\fP
Show the cache file used when pouring a bottle for the given tag\.
.TP
\fB\-\-HEAD\fP
Show the cache file used when building from HEAD\.
.TP
\fB\-\-formula\fP
Only show cache files for formulae\.
.TP
\fB\-\-cask\fP
Only show cache files for casks\.
.SS "\fB\-\-caskroom\fP \fR[\fIcask\fP \.\.\.]"
Display Homebrew\[u2019]s Caskroom path\.
.P
If \fIcask\fP is provided, display the location in the Caskroom where \fIcask\fP would be installed, without any sort of versioned directory as the last path\.
.SS "\fB\-\-cellar\fP \fR[\fIformula\fP \.\.\.]"
Display Homebrew\[u2019]s Cellar path\. \fIDefault:\fP \fB$(brew \-\-prefix)/Cellar\fP, or if that directory doesn\[u2019]t exist, \fB$(brew \-\-repository)/Cellar\fP\&\.
.P
If \fIformula\fP is provided, display the location in the Cellar where \fIformula\fP would be installed, without any sort of versioned directory as the last path\.
.SS "\fB\-\-env\fP, \fBenvironment\fP \fR[\fB\-\-shell=\fP] \fR[\fB\-\-plain\fP] \fR[\fIformula\fP \.\.\.]"
Summarise Homebrew\[u2019]s build environment as a plain list\.
.P
If the command\[u2019]s output is sent through a pipe and no shell is specified, the list is formatted for export to \fBbash\fP(1) unless \fB\-\-plain\fP is passed\.
.TP
\fB\-\-shell\fP
Generate a list of environment variables for the specified shell, or \fB\-\-shell=auto\fP to detect the current shell\.
.TP
\fB\-\-plain\fP
Generate plain output even when piped\.
.SS "\fB\-\-prefix\fP \fR[\fB\-\-unbrewed\fP] \fR[\fB\-\-installed\fP] \fR[\fIformula\fP \.\.\.]"
Display Homebrew\[u2019]s install path\. \fIDefault:\fP
.IP \(bu 4
macOS ARM: \fB/opt/homebrew\fP
.IP \(bu 4
macOS Intel: \fB/usr/local\fP
.IP \(bu 4
Linux: \fB/home/linuxbrew/\.linuxbrew\fP
.P
If \fIformula\fP is provided, display the location where \fIformula\fP is or would be installed\.
.TP
\fB\-\-unbrewed\fP
List files in Homebrew\[u2019]s prefix not installed by Homebrew\.
.TP
\fB\-\-installed\fP
Outputs nothing and returns a failing status code if \fIformula\fP is not installed\.
.SS "\fB\-\-repository\fP, \fB\-\-repo\fP \fR[\fItap\fP \.\.\.]"
Display where Homebrew\[u2019]s Git repository is located\.
.P
If \fIuser\fP\fB/\fP\fIrepo\fP are provided, display where tap \fIuser\fP\fB/\fP\fIrepo\fP\[u2019]s directory is located\.
.SS "\fB\-\-version\fP, \fB\-v\fP"
Print the version numbers of Homebrew, Homebrew/homebrew\-core and Homebrew/homebrew\-cask (if tapped) to standard output\.
.SH "DEVELOPER COMMANDS"
.SS "\fBaudit\fP \fR[\fIoptions\fP] \fR[\fIformula\fP|\fIcask\fP \.\.\.]"
Check \fIformula\fP for Homebrew coding style violations\. This should be run before submitting a new formula or cask\. If no \fIformula\fP|\fIcask\fP are provided, check all locally available formulae and casks and skip style checks\. Will exit with a non\-zero status if any errors are found\.
.TP
\fB\-\-os\fP
Audit the given operating system\. (Pass \fBall\fP to audit all operating systems\.)
.TP
\fB\-\-arch\fP
Audit the given CPU architecture\. (Pass \fBall\fP to audit all architectures\.)
.TP
\fB\-\-strict\fP
Run additional, stricter style checks\.
.TP
\fB\-\-git\fP
Run additional, slower style checks that navigate the Git repository\.
.TP
\fB\-\-online\fP
Run additional, slower style checks that require a network connection\.
.TP
\fB\-\-installed\fP
Only check formulae and casks that are currently installed\.
.TP
\fB\-\-eval\-all\fP
Evaluate all available formulae and casks, whether installed or not, to audit them\. Implied if \fBHOMEBREW_EVAL_ALL\fP is set\.
.TP
\fB\-\-new\fP
Run various additional style checks to determine if a new formula or cask is eligible for Homebrew\. This should be used when creating new formulae or casks and implies \fB\-\-strict\fP and \fB\-\-online\fP\&\.
.TP
\fB\-\-[no\-]signing\fP
Audit for signed apps, which are required on ARM
.TP
\fB\-\-token\-conflicts\fP
Audit for token conflicts\.
.TP
\fB\-\-tap\fP
Check the formulae within the given tap, specified as \fIuser\fP\fB/\fP\fIrepo\fP\&\.
.TP
\fB\-\-fix\fP
Fix style violations automatically using RuboCop\[u2019]s auto\-correct feature\.
.TP
\fB\-\-display\-filename\fP
Prefix every line of output with the file or formula name being audited, to make output easy to grep\.
.TP
\fB\-\-skip\-style\fP
Skip running non\-RuboCop style checks\. Useful if you plan on running \fBbrew style\fP separately\. Enabled by default unless a formula is specified by name\.
.TP
\fB\-D\fP, \fB\-\-audit\-debug\fP
Enable debugging and profiling of audit methods\.
.TP
\fB\-\-only\fP
Specify a comma\-separated \fImethod\fP list to only run the methods named \fBaudit_\fP\fImethod\fP\&\.
.TP
\fB\-\-except\fP
Specify a comma\-separated \fImethod\fP list to skip running the methods named \fBaudit_\fP\fImethod\fP\&\.
.TP
\fB\-\-only\-cops\fP
Specify a comma\-separated \fIcops\fP list to check for violations of only the listed RuboCop cops\.
.TP
\fB\-\-except\-cops\fP
Specify a comma\-separated \fIcops\fP list to skip checking for violations of the listed RuboCop cops\.
.TP
\fB\-\-formula\fP
Treat all named arguments as formulae\.
.TP
\fB\-\-cask\fP
Treat all named arguments as casks\.
.SS "\fBbottle\fP \fR[\fIoptions\fP] \fIinstalled_formula\fP|\fIfile\fP \fR[\.\.\.]"
Generate a bottle (binary package) from a formula that was installed with \fB\-\-build\-bottle\fP\&\. If the formula specifies a rebuild version, it will be incremented in the generated DSL\. Passing \fB\-\-keep\-old\fP will attempt to keep it at its original value, while \fB\-\-no\-rebuild\fP will remove it\.
.TP
\fB\-\-skip\-relocation\fP
Do not check if the bottle can be marked as relocatable\.
.TP
\fB\-\-force\-core\-tap\fP
Build a bottle even if \fIformula\fP is not in \fBhomebrew/core\fP or any installed taps\.
.TP
\fB\-\-no\-rebuild\fP
If the formula specifies a rebuild version, remove it from the generated DSL\.
.TP
\fB\-\-keep\-old\fP
If the formula specifies a rebuild version, attempt to preserve its value in the generated DSL\.
.TP
\fB\-\-json\fP
Write bottle information to a JSON file, which can be used as the value for \fB\-\-merge\fP\&\.
.TP
\fB\-\-merge\fP
Generate an updated bottle block for a formula and optionally merge it into the formula file\. Instead of a formula name, requires the path to a JSON file generated with \fBbrew bottle \-\-json\fP \fIformula\fP\&\.
.TP
\fB\-\-write\fP
Write changes to the formula file\. A new commit will be generated unless \fB\-\-no\-commit\fP is passed\.
.TP
\fB\-\-no\-commit\fP
When passed with \fB\-\-write\fP, a new commit will not generated after writing changes to the formula file\.
.TP
\fB\-\-only\-json\-tab\fP
When passed with \fB\-\-json\fP, the tab will be written to the JSON file but not the bottle\.
.TP
\fB\-\-no\-all\-checks\fP
Don\[u2019]t try to create an \fBall\fP bottle or stop a no\-change upload\.
.TP
\fB\-\-committer\fP
Specify a committer name and email in \fBgit\fP\[u2019]s standard author format\.
.TP
\fB\-\-root\-url\fP
Use the specified \fIURL\fP as the root of the bottle\[u2019]s URL instead of Homebrew\[u2019]s default\.
.TP
\fB\-\-root\-url\-using\fP
Use the specified download strategy class for downloading the bottle\[u2019]s URL instead of Homebrew\[u2019]s default\.
.SS "\fBbump\fP \fR[\fIoptions\fP] \fR[\fIformula\fP|\fIcask\fP \.\.\.]"
Display out\-of\-date brew formulae and the latest version available\. If the returned current and livecheck versions differ or when querying specific formulae, also displays whether a pull request has been opened with the URL\.
.TP
\fB\-\-full\-name\fP
Print formulae/casks with fully\-qualified names\.
.TP
\fB\-\-no\-pull\-requests\fP
Do not retrieve pull requests from GitHub\.
.TP
\fB\-\-formula\fP
Check only formulae\.
.TP
\fB\-\-cask\fP
Check only casks\.
.TP
\fB\-\-tap\fP
Check formulae and casks within the given tap, specified as \fIuser\fP\fB/\fP\fIrepo\fP\&\.
.TP
\fB\-\-installed\fP
Check formulae and casks that are currently installed\.
.TP
\fB\-\-no\-fork\fP
Don\[u2019]t try to fork the repository\.
.TP
\fB\-\-open\-pr\fP
Open a pull request for the new version if none have been opened yet\.
.TP
\fB\-\-limit\fP
Limit number of package results returned\.
.TP
\fB\-\-start\-with\fP
Letter or word that the list of package results should alphabetically follow\.
.SS "\fBbump\-cask\-pr\fP \fR[\fIoptions\fP] \fIcask\fP"
Create a pull request to update \fIcask\fP with a new version\.
.P
A best effort to determine the \fISHA\-256\fP will be made if the value is not supplied by the user\.
.TP
\fB\-n\fP, \fB\-\-dry\-run\fP
Print what would be done rather than doing it\.
.TP
\fB\-\-write\-only\fP
Make the expected file modifications without taking any Git actions\.
.TP
\fB\-\-commit\fP
When passed with \fB\-\-write\-only\fP, generate a new commit after writing changes to the cask file\.
.TP
\fB\-\-no\-audit\fP
Don\[u2019]t run \fBbrew audit\fP before opening the PR\.
.TP
\fB\-\-no\-style\fP
Don\[u2019]t run \fBbrew style \-\-fix\fP before opening the PR\.
.TP
\fB\-\-no\-browse\fP
Print the pull request URL instead of opening in a browser\.
.TP
\fB\-\-no\-fork\fP
Don\[u2019]t try to fork the repository\.
.TP
\fB\-\-version\fP
Specify the new \fIversion\fP for the cask\.
.TP
\fB\-\-version\-arm\fP
Specify the new cask \fIversion\fP for the ARM architecture\.
.TP
\fB\-\-version\-intel\fP
Specify the new cask \fIversion\fP for the Intel architecture\.
.TP
\fB\-\-message\fP
Prepend \fImessage\fP to the default pull request message\.
.TP
\fB\-\-url\fP
Specify the \fIURL\fP for the new download\.
.TP
\fB\-\-sha256\fP
Specify the \fISHA\-256\fP checksum of the new download\.
.TP
\fB\-\-fork\-org\fP
Use the specified GitHub organization for forking\.
.SS "\fBbump\-formula\-pr\fP \fR[\fIoptions\fP] \fR[\fIformula\fP]"
Create a pull request to update \fIformula\fP with a new URL or a new tag\.
.P
If a \fIURL\fP is specified, the \fISHA\-256\fP checksum of the new download should also be specified\. A best effort to determine the \fISHA\-256\fP will be made if not supplied by the user\.
.P
If a \fItag\fP is specified, the Git commit \fIrevision\fP corresponding to that tag should also be specified\. A best effort to determine the \fIrevision\fP will be made if the value is not supplied by the user\.
.P
If a \fIversion\fP is specified, a best effort to determine the \fIURL\fP and \fISHA\-256\fP or the \fItag\fP and \fIrevision\fP will be made if both values are not supplied by the user\.
.P
\fINote:\fP this command cannot be used to transition a formula from a URL\-and\-SHA\-256 style specification into a tag\-and\-revision style specification, nor vice versa\. It must use whichever style specification the formula already uses\.
.TP
\fB\-n\fP, \fB\-\-dry\-run\fP
Print what would be done rather than doing it\.
.TP
\fB\-\-write\-only\fP
Make the expected file modifications without taking any Git actions\.
.TP
\fB\-\-commit\fP
When passed with \fB\-\-write\-only\fP, generate a new commit after writing changes to the formula file\.
.TP
\fB\-\-no\-audit\fP
Don\[u2019]t run \fBbrew audit\fP before opening the PR\.
.TP
\fB\-\-strict\fP
Run \fBbrew audit \-\-strict\fP before opening the PR\.
.TP
\fB\-\-online\fP
Run \fBbrew audit \-\-online\fP before opening the PR\.
.TP
\fB\-\-no\-browse\fP
Print the pull request URL instead of opening in a browser\.
.TP
\fB\-\-no\-fork\fP
Don\[u2019]t try to fork the repository\.
.TP
\fB\-\-mirror\fP
Use the specified \fIURL\fP as a mirror URL\. If \fIURL\fP is a comma\-separated list of URLs, multiple mirrors will be added\.
.TP
\fB\-\-fork\-org\fP
Use the specified GitHub organization for forking\.
.TP
\fB\-\-version\fP
Use the specified \fIversion\fP to override the value parsed from the URL or tag\. Note that \fB\-\-version=0\fP can be used to delete an existing version override from a formula if it has become redundant\.
.TP
\fB\-\-message\fP
Prepend \fImessage\fP to the default pull request message\.
.TP
\fB\-\-url\fP
Specify the \fIURL\fP for the new download\. If a \fIURL\fP is specified, the \fISHA\-256\fP checksum of the new download should also be specified\.
.TP
\fB\-\-sha256\fP
Specify the \fISHA\-256\fP checksum of the new download\.
.TP
\fB\-\-tag\fP
Specify the new git commit \fItag\fP for the formula\.
.TP
\fB\-\-revision\fP
Specify the new commit \fIrevision\fP corresponding to the specified git \fItag\fP or specified \fIversion\fP\&\.
.TP
\fB\-f\fP, \fB\-\-force\fP
Remove all mirrors if \fB\-\-mirror\fP was not specified\.
.TP
\fB\-\-install\-dependencies\fP
Install missing dependencies required to update resources\.
.TP
\fB\-\-python\-package\-name\fP
Use the specified \fIpackage\-name\fP when finding Python resources for \fIformula\fP\&\. If no package name is specified, it will be inferred from the formula\[u2019]s stable URL\.
.TP
\fB\-\-python\-extra\-packages\fP
Include these additional Python packages when finding resources\.
.TP
\fB\-\-python\-exclude\-packages\fP
Exclude these Python packages when finding resources\.
.SS "\fBbump\-revision\fP \fR[\fIoptions\fP] \fIformula\fP \fR[\.\.\.]"
Create a commit to increment the revision of \fIformula\fP\&\. If no revision is present, \[u201c]revision 1\[u201d] will be added\.
.TP
\fB\-n\fP, \fB\-\-dry\-run\fP
Print what would be done rather than doing it\.
.TP
\fB\-\-remove\-bottle\-block\fP
Remove the bottle block in addition to bumping the revision\.
.TP
\fB\-\-write\-only\fP
Make the expected file modifications without taking any Git actions\.
.TP
\fB\-\-message\fP
Append \fImessage\fP to the default commit message\.
.SS "\fBbump\-unversioned\-casks\fP \fR[\fIoptions\fP] \fIcask\fP|\fItap\fP \fR[\.\.\.]"
Check all casks with unversioned URLs in a given \fItap\fP for updates\.
.TP
\fB\-n\fP, \fB\-\-dry\-run\fP
Do everything except caching state and opening pull requests\.
.TP
\fB\-\-limit\fP
Maximum runtime in minutes\.
.TP
\fB\-\-state\-file\fP
File for caching state\.
.SS "\fBcat\fP \fR[\fB\-\-formula\fP] \fR[\fB\-\-cask\fP] \fIformula\fP|\fIcask\fP \fR[\.\.\.]"
Display the source of a \fIformula\fP or \fIcask\fP\&\.
.TP
\fB\-\-formula\fP
Treat all named arguments as formulae\.
.TP
\fB\-\-cask\fP
Treat all named arguments as casks\.
.SS "\fBcontributions\fP \fR[\-\-user=\fIemail|username\fP] \fR[\fI\-\-repositories\fP\fB=\fP] \fR[\fI\-\-csv\fP]"
Summarise contributions to Homebrew repositories\.
.TP
\fB\-\-repositories\fP
Specify a comma\-separated list of repositories to search\. Supported repositories: \fBbrew\fP, \fBcore\fP, \fBcask\fP, \fBaliases\fP, \fBbundle\fP, \fBcommand\-not\-found\fP, \fBtest\-bot\fP and \fBservices\fP\&\. Omitting this flag, or specifying \fB\-\-repositories=primary\fP, searches only the main repositories: brew,core,cask\. Specifying \fB\-\-repositories=all\fP, searches all repositories\.
.TP
\fB\-\-from\fP
Date (ISO\-8601 format) to start searching contributions\. Omitting this flag searches the last year\.
.TP
\fB\-\-to\fP
Date (ISO\-8601 format) to stop searching contributions\.
.TP
\fB\-\-user\fP
Specify a comma\-separated list of GitHub usernames or email addresses to find contributions from\. Omitting this flag searches maintainers\.
.TP
\fB\-\-csv\fP
Print a CSV of contributions across repositories over the time period\.
.SS "\fBcreate\fP \fR[\fIoptions\fP] \fIURL\fP"
Generate a formula or, with \fB\-\-cask\fP, a cask for the downloadable file at \fIURL\fP and open it in the editor\. Homebrew will attempt to automatically derive the formula name and version, but if it fails, you\[u2019]ll have to make your own template\. The \fBwget\fP formula serves as a simple example\. For the complete API, see: 
.UR https://rubydoc\.brew\.sh/Formula
.UE
.TP
\fB\-\-autotools\fP
Create a basic template for an Autotools\-style build\.
.TP
\fB\-\-cask\fP
Create a basic template for a cask\.
.TP
\fB\-\-cmake\fP
Create a basic template for a CMake\-style build\.
.TP
\fB\-\-crystal\fP
Create a basic template for a Crystal build\.
.TP
\fB\-\-go\fP
Create a basic template for a Go build\.
.TP
\fB\-\-meson\fP
Create a basic template for a Meson\-style build\.
.TP
\fB\-\-node\fP
Create a basic template for a Node build\.
.TP
\fB\-\-perl\fP
Create a basic template for a Perl build\.
.TP
\fB\-\-python\fP
Create a basic template for a Python build\.
.TP
\fB\-\-ruby\fP
Create a basic template for a Ruby build\.
.TP
\fB\-\-rust\fP
Create a basic template for a Rust build\.
.TP
\fB\-\-no\-fetch\fP
Homebrew will not download \fIURL\fP to the cache and will thus not add its SHA\-256 to the formula for you, nor will it check the GitHub API for GitHub projects (to fill out its description and homepage)\.
.TP
\fB\-\-HEAD\fP
Indicate that \fIURL\fP points to the package\[u2019]s repository rather than a file\.
.TP
\fB\-\-set\-name\fP
Explicitly set the \fIname\fP of the new formula or cask\.
.TP
\fB\-\-set\-version\fP
Explicitly set the \fIversion\fP of the new formula or cask\.
.TP
\fB\-\-set\-license\fP
Explicitly set the \fIlicense\fP of the new formula\.
.TP
\fB\-\-tap\fP
Generate the new formula within the given tap, specified as \fIuser\fP\fB/\fP\fIrepo\fP\&\.
.TP
\fB\-f\fP, \fB\-\-force\fP
Ignore errors for disallowed formula names and names that shadow aliases\.
.SS "\fBdispatch\-build\-bottle\fP \fR[\fIoptions\fP] \fIformula\fP \fR[\.\.\.]"
Build bottles for these formulae with GitHub Actions\.
.TP
\fB\-\-tap\fP
Target tap repository (default: \fBhomebrew/core\fP)\.
.TP
\fB\-\-timeout\fP
Build timeout (in minutes, default: 60)\.
.TP
\fB\-\-issue\fP
If specified, post a comment to this issue number if the job fails\.
.TP
\fB\-\-macos\fP
macOS version (or comma\-separated list of versions) the bottle should be built for\.
.TP
\fB\-\-workflow\fP
Dispatch specified workflow (default: \fBdispatch\-build\-bottle\.yml\fP)\.
.TP
\fB\-\-upload\fP
Upload built bottles\.
.TP
\fB\-\-linux\fP
Dispatch bottle for Linux (using GitHub runners)\.
.TP
\fB\-\-linux\-self\-hosted\fP
Dispatch bottle for Linux (using self\-hosted runner)\.
.TP
\fB\-\-linux\-wheezy\fP
Use Debian Wheezy container for building the bottle on Linux\.
.SS "\fBedit\fP \fR[\fIoptions\fP] \fR[\fIformula\fP|\fIcask\fP|\fItap\fP \.\.\.]"
Open a \fIformula\fP, \fIcask\fP or \fItap\fP in the editor set by \fBEDITOR\fP or \fBHOMEBREW_EDITOR\fP, or open the Homebrew repository for editing if no argument is provided\.
.TP
\fB\-\-formula\fP
Treat all named arguments as formulae\.
.TP
\fB\-\-cask\fP
Treat all named arguments as casks\.
.TP
\fB\-\-print\-path\fP
Print the file path to be edited, without opening an editor\.
.SS "\fBextract\fP \fR[\fB\-\-version=\fP] \fR[\fB\-\-force\fP] \fIformula\fP \fItap\fP"
Look through repository history to find the most recent version of \fIformula\fP and create a copy in \fItap\fP\&\. Specifically, the command will create the new formula file at \fItap\fP\fB/Formula/\fP\fIformula\fP\fB@\fP\fIversion\fP\fB\&\.rb\fP\&\. If the tap is not installed yet, attempt to install/clone the tap before continuing\. To extract a formula from a tap that is not \fBhomebrew/core\fP use its fully\-qualified form of \fIuser\fP\fB/\fP\fIrepo\fP\fB/\fP\fIformula\fP\&\.
.TP
\fB\-\-version\fP
Extract the specified \fIversion\fP of \fIformula\fP instead of the most recent\.
.TP
\fB\-f\fP, \fB\-\-force\fP
Overwrite the destination formula if it already exists\.
.SS "\fBformula\fP \fIformula\fP \fR[\.\.\.]"
Display the path where \fIformula\fP is located\.
.SS "\fBgenerate\-cask\-api\fP \fR[\fB\-\-dry\-run\fP]"
Generate \fBhomebrew/cask\fP API data files for 
.UR https://formulae\.brew\.sh
.UE \&\. The generated files are written to the current directory\.
.TP
\fB\-n\fP, \fB\-\-dry\-run\fP
Generate API data without writing it to files\.
.SS "\fBgenerate\-formula\-api\fP \fR[\fB\-\-dry\-run\fP]"
Generate \fBhomebrew/core\fP API data files for 
.UR https://formulae\.brew\.sh
.UE \&\. The generated files are written to the current directory\.
.TP
\fB\-n\fP, \fB\-\-dry\-run\fP
Generate API data without writing it to files\.
.SS "\fBgenerate\-man\-completions\fP"
Generate Homebrew\[u2019]s manpages and shell completions\.
.SS "\fBinstall\-bundler\-gems\fP \fR[\fB\-\-groups=\fP] \fR[\fB\-\-add\-groups=\fP]"
Install Homebrew\[u2019]s Bundler gems\.
.TP
\fB\-\-groups\fP
Installs the specified comma\-separated list of gem groups (default: last used)\. Replaces any previously installed groups\.
.TP
\fB\-\-add\-groups\fP
Installs the specified comma\-separated list of gem groups, in addition to those already installed\.
.SS "\fBirb\fP \fR[\fB\-\-examples\fP] \fR[\fB\-\-pry\fP]"
Enter the interactive Homebrew Ruby shell\.
.TP
\fB\-\-examples\fP
Show several examples\.
.TP
\fB\-\-pry\fP
Use Pry instead of IRB\. Implied if \fBHOMEBREW_PRY\fP is set\.
.SS "\fBlinkage\fP \fR[\fIoptions\fP] \fR[\fIinstalled_formula\fP \.\.\.]"
Check the library links from the given \fIformula\fP kegs\. If no \fIformula\fP are provided, check all kegs\. Raises an error if run on uninstalled formulae\.
.TP
\fB\-\-test\fP
Show only missing libraries and exit with a non\-zero status if any missing libraries are found\.
.TP
\fB\-\-strict\fP
Exit with a non\-zero status if any undeclared dependencies with linkage are found\.
.TP
\fB\-\-reverse\fP
For every library that a keg references, print its dylib path followed by the binaries that link to it\.
.TP
\fB\-\-cached\fP
Print the cached linkage values stored in \fBHOMEBREW_CACHE\fP, set by a previous \fBbrew linkage\fP run\.
.SS "\fBlivecheck\fP, \fBlc\fP \fR[\fIoptions\fP] \fR[\fIformula\fP|\fIcask\fP \.\.\.]"
Check for newer versions of formulae and/or casks from upstream\. If no formula or cask argument is passed, the list of formulae and casks to check is taken from \fBHOMEBREW_LIVECHECK_WATCHLIST\fP or \fB~/\.homebrew/livecheck_watchlist\.txt\fP\&\.
.TP
\fB\-\-full\-name\fP
Print formulae and casks with fully\-qualified names\.
.TP
\fB\-\-tap\fP
Check formulae and casks within the given tap, specified as \fIuser\fP\fB/\fP\fIrepo\fP\&\.
.TP
\fB\-\-eval\-all\fP
Evaluate all available formulae and casks, whether installed or not, to check them\.
.TP
\fB\-\-installed\fP
Check formulae and casks that are currently installed\.
.TP
\fB\-\-newer\-only\fP
Show the latest version only if it\[u2019]s newer than the formula/cask\.
.TP
\fB\-\-json\fP
Output information in JSON format\.
.TP
\fB\-r\fP, \fB\-\-resources\fP
Also check resources for formulae\.
.TP
\fB\-q\fP, \fB\-\-quiet\fP
Suppress warnings, don\[u2019]t print a progress bar for JSON output\.
.TP
\fB\-\-formula\fP
Only check formulae\.
.TP
\fB\-\-cask\fP
Only check casks\.
.TP
\fB\-\-extract\-plist\fP
Enable checking multiple casks with ExtractPlist strategy\.
.SS "\fBpr\-automerge\fP \fR[\fIoptions\fP]"
Find pull requests that can be automatically merged using \fBbrew pr\-publish\fP\&\.
.TP
\fB\-\-tap\fP
Target tap repository (default: \fBhomebrew/core\fP)\.
.TP
\fB\-\-workflow\fP
Workflow file to use with \fBbrew pr\-publish\fP\&\.
.TP
\fB\-\-with\-label\fP
Pull requests must have this label\.
.TP
\fB\-\-without\-labels\fP
Pull requests must not have these labels (default: \fBdo not merge\fP, \fBnew formula\fP, \fBautomerge\-skip\fP, \fBpre\-release\fP, \fBCI\-published\-bottle\-commits\fP)\.
.TP
\fB\-\-without\-approval\fP
Pull requests do not require approval to be merged\.
.TP
\fB\-\-publish\fP
Run \fBbrew pr\-publish\fP on matching pull requests\.
.TP
\fB\-\-autosquash\fP
Instruct \fBbrew pr\-publish\fP to automatically reformat and reword commits in the pull request to the preferred format\.
.TP
\fB\-\-ignore\-failures\fP
Include pull requests that have failing status checks\.
.SS "\fBpr\-publish\fP \fR[\fIoptions\fP] \fIpull_request\fP \fR[\.\.\.]"
Publish bottles for a pull request with GitHub Actions\. Requires write access to the repository\.
.TP
\fB\-\-autosquash\fP
If supported on the target tap, automatically reformat and reword commits to our preferred format\.
.TP
\fB\-\-large\-runner\fP
Run the upload job on a large runner\.
.TP
\fB\-\-branch\fP
Branch to use the workflow from (default: \fBmaster\fP)\.
.TP
\fB\-\-message\fP
Message to include when autosquashing revision bumps, deletions and rebuilds\.
.TP
\fB\-\-tap\fP
Target tap repository (default: \fBhomebrew/core\fP)\.
.TP
\fB\-\-workflow\fP
Target workflow filename (default: \fBpublish\-commit\-bottles\.yml\fP)\.
.SS "\fBpr\-pull\fP \fR[\fIoptions\fP] \fIpull_request\fP \fR[\.\.\.]"
Download and publish bottles and apply the bottle commit from a pull request with artifacts generated by GitHub Actions\. Requires write access to the repository\.
.TP
\fB\-\-no\-upload\fP
Download the bottles but don\[u2019]t upload them\.
.TP
\fB\-\-no\-commit\fP
Do not generate a new commit before uploading\.
.TP
\fB\-\-no\-cherry\-pick\fP
Do not cherry\-pick commits from the pull request branch\.
.TP
\fB\-n\fP, \fB\-\-dry\-run\fP
Print what would be done rather than doing it\.
.TP
\fB\-\-clean\fP
Do not amend the commits from pull requests\.
.TP
\fB\-\-keep\-old\fP
If the formula specifies a rebuild version, attempt to preserve its value in the generated DSL\.
.TP
\fB\-\-autosquash\fP
Automatically reformat and reword commits in the pull request to our preferred format\.
.TP
\fB\-\-branch\-okay\fP
Do not warn if pulling to a branch besides the repository default (useful for testing)\.
.TP
\fB\-\-resolve\fP
When a patch fails to apply, leave in progress and allow user to resolve, instead of aborting\.
.TP
\fB\-\-warn\-on\-upload\-failure\fP
Warn instead of raising an error if the bottle upload fails\. Useful for repairing bottle uploads that previously failed\.
.TP
\fB\-\-retain\-bottle\-dir\fP
Does not clean up the tmp directory for the bottle so it can be used later\.
.TP
\fB\-\-committer\fP
Specify a committer name and email in \fBgit\fP\[u2019]s standard author format\.
.TP
\fB\-\-message\fP
Message to include when autosquashing revision bumps, deletions and rebuilds\.
.TP
\fB\-\-artifact\-pattern\fP
Download artifacts with the specified pattern (default: \fBbottles{,_*}\fP)\.
.TP
\fB\-\-tap\fP
Target tap repository (default: \fBhomebrew/core\fP)\.
.TP
\fB\-\-root\-url\fP
Use the specified \fIURL\fP as the root of the bottle\[u2019]s URL instead of Homebrew\[u2019]s default\.
.TP
\fB\-\-root\-url\-using\fP
Use the specified download strategy class for downloading the bottle\[u2019]s URL instead of Homebrew\[u2019]s default\.
.TP
\fB\-\-workflows\fP
Retrieve artifacts from the specified workflow (default: \fBtests\.yml\fP)\. Can be a comma\-separated list to include multiple workflows\.
.TP
\fB\-\-ignore\-missing\-artifacts\fP
Comma\-separated list of workflows which can be ignored if they have not been run\.
.SS "\fBpr\-upload\fP \fR[\fIoptions\fP]"
Apply the bottle commit and publish bottles to a host\.
.TP
\fB\-\-keep\-old\fP
If the formula specifies a rebuild version, attempt to preserve its value in the generated DSL\.
.TP
\fB\-n\fP, \fB\-\-dry\-run\fP
Print what would be done rather than doing it\.
.TP
\fB\-\-no\-commit\fP
Do not generate a new commit before uploading\.
.TP
\fB\-\-warn\-on\-upload\-failure\fP
Warn instead of raising an error if the bottle upload fails\. Useful for repairing bottle uploads that previously failed\.
.TP
\fB\-\-upload\-only\fP
Skip running \fBbrew bottle\fP before uploading\.
.TP
\fB\-\-committer\fP
Specify a committer name and email in \fBgit\fP\[u2019]s standard author format\.
.TP
\fB\-\-root\-url\fP
Use the specified \fIURL\fP as the root of the bottle\[u2019]s URL instead of Homebrew\[u2019]s default\.
.TP
\fB\-\-root\-url\-using\fP
Use the specified download strategy class for downloading the bottle\[u2019]s URL instead of Homebrew\[u2019]s default\.
.SS "\fBprof\fP \fR[\fB\-\-stackprof\fP] \fR[\fB\-\-vernier\fP] \fIcommand\fP \fR[\.\.\.]"
Run Homebrew with a Ruby profiler\. For example, \fBbrew prof readall\fP\&\.
.TP
\fB\-\-stackprof\fP
Use \fBstackprof\fP instead of \fBruby\-prof\fP (the default)\.
.TP
\fB\-\-vernier\fP
Use \fBvernier\fP instead of \fBruby\-prof\fP (the default)\.
.SS "\fBrelease\fP \fR[\fB\-\-major\fP] \fR[\fB\-\-minor\fP]"
Create a new draft Homebrew/brew release with the appropriate version number and release notes\.
.P
By default, \fBbrew release\fP will bump the patch version number\. Pass \fB\-\-major\fP or \fB\-\-minor\fP to bump the major or minor version numbers, respectively\. The command will fail if the previous major or minor release was made less than one month ago\.
.P
\fINote:\fP Requires write access to the Homebrew/brew repository\.
.TP
\fB\-\-major\fP
Create a major release\.
.TP
\fB\-\-minor\fP
Create a minor release\.
.SS "\fBrubocop\fP"
Installs, configures and runs Homebrew\[u2019]s \fBrubocop\fP\&\.
.SS "\fBruby\fP \fR[\fIoptions\fP] (\fB\-e\fP \fItext\fP|\fIfile\fP)"
Run a Ruby instance with Homebrew\[u2019]s libraries loaded\. For example, \fBbrew ruby \-e "puts :gcc\.f\.deps"\fP or \fBbrew ruby script\.rb\fP\&\.
.P
Run e\.g\. \fBbrew ruby \-\- \-\-version\fP to pass arbitrary arguments to \fBruby\fP\&\.
.TP
\fB\-r\fP
Load a library using \fBrequire\fP\&\.
.TP
\fB\-e\fP
Execute the given text string as a script\.
.SS "\fBrubydoc\fP \fR[\fB\-\-only\-public\fP] \fR[\fB\-\-open\fP]"
Generate Homebrew\[u2019]s RubyDoc documentation\.
.TP
\fB\-\-only\-public\fP
Only generate public API documentation\.
.TP
\fB\-\-open\fP
Open generated documentation in a browser\.
.SS "\fBsh\fP \fR[\fB\-\-env=\fP] \fR[\fB\-\-cmd=\fP] \fR[\fIfile\fP]"
Enter an interactive shell for Homebrew\[u2019]s build environment\. Use years\-battle\-hardened build logic to help your \fB\&\./configure && make && make install\fP and even your \fBgem install\fP succeed\. Especially handy if you run Homebrew in an Xcode\-only configuration since it adds tools like \fBmake\fP to your \fBPATH\fP which build systems would not find otherwise\.
.TP
\fB\-\-env\fP
Use the standard \fBPATH\fP instead of superenv\[u2019]s when \fBstd\fP is passed\.
.TP
\fB\-c\fP, \fB\-\-cmd\fP
Execute commands in a non\-interactive shell\.
.SS "\fBstyle\fP \fR[\fIoptions\fP] \fR[\fIfile\fP|\fItap\fP|\fIformula\fP|\fIcask\fP \.\.\.]"
Check formulae or files for conformance to Homebrew style guidelines\.
.P
Lists of \fIfile\fP, \fItap\fP and \fIformula\fP may not be combined\. If none are provided, \fBstyle\fP will run style checks on the whole Homebrew library, including core code and all formulae\.
.TP
\fB\-\-fix\fP
Fix style violations automatically using RuboCop\[u2019]s auto\-correct feature\.
.TP
\fB\-\-reset\-cache\fP
Reset the RuboCop cache\.
.TP
\fB\-\-formula\fP
Treat all named arguments as formulae\.
.TP
\fB\-\-cask\fP
Treat all named arguments as casks\.
.TP
\fB\-\-only\-cops\fP
Specify a comma\-separated \fIcops\fP list to check for violations of only the listed RuboCop cops\.
.TP
\fB\-\-except\-cops\fP
Specify a comma\-separated \fIcops\fP list to skip checking for violations of the listed RuboCop cops\.
.SS "\fBtap\-new\fP \fR[\fIoptions\fP] \fIuser\fP\fB/\fP\fIrepo\fP"
Generate the template files for a new tap\.
.TP
\fB\-\-no\-git\fP
Don\[u2019]t initialize a Git repository for the tap\.
.TP
\fB\-\-pull\-label\fP
Label name for pull requests ready to be pulled (default: \fBpr\-pull\fP)\.
.TP
\fB\-\-branch\fP
Initialize Git repository and setup GitHub Actions workflows with the specified branch name (default: \fBmain\fP)\.
.TP
\fB\-\-github\-packages\fP
Upload bottles to GitHub Packages\.
.SS "\fBtest\fP \fR[\fIoptions\fP] \fIinstalled_formula\fP \fR[\.\.\.]"
Run the test method provided by an installed formula\. There is no standard output or return code, but generally it should notify the user if something is wrong with the installed formula\.
.P
\fIExample:\fP \fBbrew install jruby && brew test jruby\fP
.TP
\fB\-f\fP, \fB\-\-force\fP
Test formulae even if they are unlinked\.
.TP
\fB\-\-HEAD\fP
Test the HEAD version of a formula\.
.TP
\fB\-\-keep\-tmp\fP
Retain the temporary files created for the test\.
.TP
\fB\-\-retry\fP
Retry if a testing fails\.
.SS "\fBtests\fP \fR[\fIoptions\fP]"
Run Homebrew\[u2019]s unit and integration tests\.
.TP
\fB\-\-coverage\fP
Generate code coverage reports\.
.TP
\fB\-\-generic\fP
Run only OS\-agnostic tests\.
.TP
\fB\-\-online\fP
Include tests that use the GitHub API and tests that use any of the taps for official external commands\.
.TP
\fB\-\-debug\fP
Enable debugging using \fBruby/debug\fP, or surface the standard \fBodebug\fP output\.
.TP
\fB\-\-changed\fP
Only runs tests on files that were changed from the master branch\.
.TP
\fB\-\-fail\-fast\fP
Exit early on the first failing test\.
.TP
\fB\-\-only\fP
Run only \fB<test_script>_spec\.rb\fP\&\. Appending \fB:<line_number>\fP will start at a specific line\.
.TP
\fB\-\-profile\fP
Run the test suite serially to find the \fIn\fP slowest tests\.
.TP
\fB\-\-seed\fP
Randomise tests with the specified \fIvalue\fP instead of a random seed\.
.SS "\fBtypecheck\fP, \fBtc\fP \fR[\fIoptions\fP]"
Check for typechecking errors using Sorbet\.
.TP
\fB\-\-fix\fP
Automatically fix type errors\.
.TP
\fB\-q\fP, \fB\-\-quiet\fP
Silence all non\-critical errors\.
.TP
\fB\-\-update\fP
Update RBI files\.
.TP
\fB\-\-update\-all\fP
Update all RBI files rather than just updated gems\.
.TP
\fB\-\-suggest\-typed\fP
Try upgrading \fBtyped\fP sigils\.
.TP
\fB\-\-dir\fP
Typecheck all files in a specific directory\.
.TP
\fB\-\-file\fP
Typecheck a single file\.
.TP
\fB\-\-ignore\fP
Ignores input files that contain the given string in their paths (relative to the input path passed to Sorbet)\.
.SS "\fBunbottled\fP \fR[\fIoptions\fP] \fR[\fIformula\fP \.\.\.]"
Show the unbottled dependents of formulae\.
.TP
\fB\-\-tag\fP
Use the specified bottle tag (e\.g\. \fBbig_sur\fP) instead of the current OS\.
.TP
\fB\-\-dependents\fP
Skip getting analytics data and sort by number of dependents instead\.
.TP
\fB\-\-total\fP
Print the number of unbottled and total formulae\.
.TP
\fB\-\-lost\fP
Print the \fBhomebrew/core\fP commits where bottles were lost in the last week\.
.TP
\fB\-\-eval\-all\fP
Evaluate all available formulae and casks, whether installed or not, to check them\. Implied if \fBHOMEBREW_EVAL_ALL\fP is set\.
.SS "\fBunpack\fP \fR[\fIoptions\fP] \fIformula\fP \fR[\.\.\.]"
Unpack the source files for \fIformula\fP into subdirectories of the current working directory\.
.TP
\fB\-\-destdir\fP
Create subdirectories in the directory named by \fIpath\fP instead\.
.TP
\fB\-\-patch\fP
Patches for \fIformula\fP will be applied to the unpacked source\.
.TP
\fB\-g\fP, \fB\-\-git\fP
Initialise a Git repository in the unpacked source\. This is useful for creating patches for the software\.
.TP
\fB\-f\fP, \fB\-\-force\fP
Overwrite the destination directory if it already exists\.
.SS "\fBupdate\-license\-data\fP"
Update SPDX license data in the Homebrew repository\.
.SS "\fBupdate\-maintainers\fP"
Update the list of maintainers in the \fBHomebrew/brew\fP README\.
.SS "\fBupdate\-python\-resources\fP \fR[\fIoptions\fP] \fIformula\fP \fR[\.\.\.]"
Update versions for PyPI resource blocks in \fIformula\fP\&\.
.TP
\fB\-p\fP, \fB\-\-print\-only\fP
Print the updated resource blocks instead of changing \fIformula\fP\&\.
.TP
\fB\-s\fP, \fB\-\-silent\fP
Suppress any output\.
.TP
\fB\-\-ignore\-non\-pypi\-packages\fP
Don\[u2019]t fail if \fIformula\fP is not a PyPI package\.
.TP
\fB\-\-install\-dependencies\fP
Install missing dependencies required to update resources\.
.TP
\fB\-\-version\fP
Use the specified \fIversion\fP when finding resources for \fIformula\fP\&\. If no version is specified, the current version for \fIformula\fP will be used\.
.TP
\fB\-\-package\-name\fP
Use the specified \fIpackage\-name\fP when finding resources for \fIformula\fP\&\. If no package name is specified, it will be inferred from the formula\[u2019]s stable URL\.
.TP
\fB\-\-extra\-packages\fP
Include these additional packages when finding resources\.
.TP
\fB\-\-exclude\-packages\fP
Exclude these packages when finding resources\.
.SS "\fBupdate\-sponsors\fP"
Update the list of GitHub Sponsors in the \fBHomebrew/brew\fP README\.
.SS "\fBupdate\-test\fP \fR[\fIoptions\fP]"
Run a test of \fBbrew update\fP with a new repository clone\. If no options are passed, use \fBorigin/master\fP as the start commit\.
.TP
\fB\-\-to\-tag\fP
Set \fBHOMEBREW_UPDATE_TO_TAG\fP to test updating between tags\.
.TP
\fB\-\-keep\-tmp\fP
Retain the temporary directory containing the new repository clone\.
.TP
\fB\-\-commit\fP
Use the specified \fIcommit\fP as the start commit\.
.TP
\fB\-\-before\fP
Use the commit at the specified \fIdate\fP as the start commit\.
.SS "\fBvendor\-gems\fP \fR[\fB\-\-update=\fP] \fR[\fB\-\-no\-commit\fP]"
Install and commit Homebrew\[u2019]s vendored gems\.
.TP
\fB\-\-update\fP
Update the specified list of vendored gems to the latest version\.
.TP
\fB\-\-no\-commit\fP
Do not generate a new commit upon completion\.
.SH "GLOBAL CASK OPTIONS"
These options are applicable to the \fBinstall\fP, \fBreinstall\fP and \fBupgrade\fP subcommands with the \fB\-\-cask\fP switch\.
.TP
\fB\-\-appdir\fP
Target location for Applications (default: \fB/Applications\fP)\.
.TP
\fB\-\-keyboard\-layoutdir\fP
Target location for Keyboard Layouts (default: \fB/Library/Keyboard Layouts\fP)\.
.TP
\fB\-\-colorpickerdir\fP
Target location for Color Pickers (default: \fB~/Library/ColorPickers\fP)\.
.TP
\fB\-\-prefpanedir\fP
Target location for Preference Panes (default: \fB~/Library/PreferencePanes\fP)\.
.TP
\fB\-\-qlplugindir\fP
Target location for Quick Look Plugins (default: \fB~/Library/QuickLook\fP)\.
.TP
\fB\-\-mdimporterdir\fP
Target location for Spotlight Plugins (default: \fB~/Library/Spotlight\fP)\.
.TP
\fB\-\-dictionarydir\fP
Target location for Dictionaries (default: \fB~/Library/Dictionaries\fP)\.
.TP
\fB\-\-fontdir\fP
Target location for Fonts (default: \fB~/Library/Fonts\fP)\.
.TP
\fB\-\-servicedir\fP
Target location for Services (default: \fB~/Library/Services\fP)\.
.TP
\fB\-\-input\-methoddir\fP
Target location for Input Methods (default: \fB~/Library/Input Methods\fP)\.
.TP
\fB\-\-internet\-plugindir\fP
Target location for Internet Plugins (default: \fB~/Library/Internet Plug\-Ins\fP)\.
.TP
\fB\-\-audio\-unit\-plugindir\fP
Target location for Audio Unit Plugins (default: \fB~/Library/Audio/Plug\-Ins/Components\fP)\.
.TP
\fB\-\-vst\-plugindir\fP
Target location for VST Plugins (default: \fB~/Library/Audio/Plug\-Ins/VST\fP)\.
.TP
\fB\-\-vst3\-plugindir\fP
Target location for VST3 Plugins (default: \fB~/Library/Audio/Plug\-Ins/VST3\fP)\.
.TP
\fB\-\-screen\-saverdir\fP
Target location for Screen Savers (default: \fB~/Library/Screen Savers\fP)\.
.TP
\fB\-\-language\fP
Comma\-separated list of language codes to prefer for cask installation\. The first matching language is used, otherwise it reverts to the cask\[u2019]s default language\. The default value is the language of your system\.
.SH "GLOBAL OPTIONS"
These options are applicable across multiple subcommands\.
.TP
\fB\-d\fP, \fB\-\-debug\fP
Display any debugging information\.
.TP
\fB\-q\fP, \fB\-\-quiet\fP
Make some output more quiet\.
.TP
\fB\-v\fP, \fB\-\-verbose\fP
Make some output more verbose\.
.TP
\fB\-h\fP, \fB\-\-help\fP
Show this message\.
.SH "OFFICIAL EXTERNAL COMMANDS"
.SS "\fBalias\fP \fR[\fIalias\fP \.\.\. | \fIalias\fP=\fIcommand\fP]"
Show existing aliases\. If no aliases are given, print the whole list\.
.TP
\fB\-\-edit\fP
Edit aliases in a text editor\. Either one or all aliases may be opened at once\. If the given alias doesn\[u2019]t exist it\[u2019]ll be pre\-populated with a template\.
.SS "\fBbundle\fP \fR[\fIsubcommand\fP]"
Bundler for non\-Ruby dependencies from Homebrew, Homebrew Cask, Mac App Store, Whalebrew and Visual Studio Code\.
.TP
\fBbrew bundle\fP [\fBinstall\fP]
Install and upgrade (by default) all dependencies from the \fBBrewfile\fP\&\.
.P
You can specify the \fBBrewfile\fP location using \fB\-\-file\fP or by setting the \fBHOMEBREW_BUNDLE_FILE\fP environment variable\.
.P
You can skip the installation of dependencies by adding space\-separated values to one or more of the following environment variables: \fBHOMEBREW_BUNDLE_BREW_SKIP\fP, \fBHOMEBREW_BUNDLE_CASK_SKIP\fP, \fBHOMEBREW_BUNDLE_MAS_SKIP\fP, \fBHOMEBREW_BUNDLE_WHALEBREW_SKIP\fP, \fBHOMEBREW_BUNDLE_TAP_SKIP\fP\&\.
.P
\fBbrew bundle\fP will output a \fBBrewfile\.lock\.json\fP in the same directory as the \fBBrewfile\fP if all dependencies are installed successfully\. This contains dependency and system status information which can be useful for debugging \fBbrew bundle\fP failures and replicating a \[u201c]last known good build\[u201d] state\. You can opt\-out of this behaviour by setting the \fBHOMEBREW_BUNDLE_NO_LOCK\fP environment variable or passing the \fB\-\-no\-lock\fP option\. You may wish to check this file into the same version control system as your \fBBrewfile\fP (or ensure your version control system ignores it if you\[u2019]d prefer to rely on debugging information from a local machine)\.
.TP
\fBbrew bundle dump\fP
Write all installed casks/formulae/images/taps into a \fBBrewfile\fP in the current directory\.
.TP
\fBbrew bundle cleanup\fP
Uninstall all dependencies not present in the \fBBrewfile\fP\&\.
.P
This workflow is useful for maintainers or testers who regularly install lots of formulae\.
.TP
\fBbrew bundle check\fP
Check if all dependencies present in the \fBBrewfile\fP are installed\.
.P
This provides a successful exit code if everything is up\-to\-date, making it useful for scripting\.
.TP
\fBbrew bundle list\fP
List all dependencies present in the \fBBrewfile\fP\&\.
.P
By default, only Homebrew formula dependencies are listed\.
.TP
\fBbrew bundle exec\fP \fIcommand\fP
Run an external command in an isolated build environment based on the \fBBrewfile\fP dependencies\.
.P
This sanitized build environment ignores unrequested dependencies, which makes sure that things you didn\[u2019]t specify in your \fBBrewfile\fP won\[u2019]t get picked up by commands like \fBbundle install\fP, \fBnpm install\fP, etc\. It will also add compiler flags which will help with finding keg\-only dependencies like \fBopenssl\fP, \fBicu4c\fP, etc\.
.TP
\fB\-\-file\fP
Read the \fBBrewfile\fP from this location\. Use \fB\-\-file=\-\fP to pipe to stdin/stdout\.
.TP
\fB\-\-global\fP
Read the \fBBrewfile\fP from \fB~/\.Brewfile\fP or the \fBHOMEBREW_BUNDLE_FILE_GLOBAL\fP environment variable, if set\.
.TP
\fB\-v\fP, \fB\-\-verbose\fP
\fBinstall\fP prints output from commands as they are run\. \fBcheck\fP lists all missing dependencies\.
.TP
\fB\-\-no\-upgrade\fP
\fBinstall\fP does not run \fBbrew upgrade\fP on outdated dependencies\. Note they may still be upgraded by \fBbrew install\fP if needed\.
.TP
\fB\-f\fP, \fB\-\-force\fP
\fBinstall\fP runs with \fB\-\-force\fP/\fB\-\-overwrite\fP\&\. \fBdump\fP overwrites an existing \fBBrewfile\fP\&\. \fBcleanup\fP actually performs its cleanup operations\.
.TP
\fB\-\-cleanup\fP
\fBinstall\fP performs cleanup operation, same as running \fBcleanup \-\-force\fP\&\. This is enabled by default if \fBHOMEBREW_BUNDLE_INSTALL_CLEANUP\fP is set and \fB\-\-global\fP is passed\.
.TP
\fB\-\-no\-lock\fP
\fBinstall\fP does not output a \fBBrewfile\.lock\.json\fP\&\.
.TP
\fB\-\-all\fP
\fBlist\fP all dependencies\.
.TP
\fB\-\-formula\fP
\fBlist\fP Homebrew formula dependencies\.
.TP
\fB\-\-cask\fP
\fBlist\fP Homebrew cask dependencies\.
.TP
\fB\-\-tap\fP
\fBlist\fP Homebrew tap dependencies\.
.TP
\fB\-\-mas\fP
\fBlist\fP Mac App Store dependencies\.
.TP
\fB\-\-whalebrew\fP
\fBlist\fP Whalebrew dependencies\.
.TP
\fB\-\-vscode\fP
\fBlist\fP VSCode extensions\.
.TP
\fB\-\-describe\fP
\fBdump\fP adds a description comment above each line, unless the dependency does not have a description\. This is enabled by default if \fBHOMEBREW_BUNDLE_DUMP_DESCRIBE\fP is set\.
.TP
\fB\-\-no\-restart\fP
\fBdump\fP does not add \fBrestart_service\fP to formula lines\.
.TP
\fB\-\-zap\fP
\fBcleanup\fP casks using the \fBzap\fP command instead of \fBuninstall\fP\&\.
.SS "\fBcommand\-not\-found\-init\fP"
Print instructions for setting up the command\-not\-found hook for your shell\. If the output is not to a tty, print the appropriate handler script for your shell\.
.SS "\fBservices\fP \fR[\fIsubcommand\fP]"
Manage background services with macOS\[u2019] \fBlaunchctl\fP(1) daemon manager or Linux\[u2019]s \fBsystemctl\fP(1) service manager\.
.P
If \fBsudo\fP is passed, operate on \fB/Library/LaunchDaemons\fP/\fB/usr/lib/systemd/system\fP (started at boot)\. Otherwise, operate on \fB~/Library/LaunchAgents\fP/\fB~/\.config/systemd/user\fP (started at login)\.
.TP
[\fBsudo\fP] \fBbrew services\fP [\fBlist\fP] (\fB\-\-json\fP) (\fB\-\-debug\fP)
List information about all managed services for the current user (or root)\. Provides more output from Homebrew and \fBlaunchctl\fP(1) or \fBsystemctl\fP(1) if run with \fB\-\-debug\fP\&\.
.TP
[\fBsudo\fP] \fBbrew services info\fP (\fIformula\fP|\fB\-\-all\fP|\fB\-\-json\fP)
List all managed services for the current user (or root)\.
.TP
[\fBsudo\fP] \fBbrew services run\fP (\fIformula\fP|\fB\-\-all\fP)
Run the service \fIformula\fP without registering to launch at login (or boot)\.
.TP
[\fBsudo\fP] \fBbrew services start\fP (\fIformula\fP|\fB\-\-all\fP|\fB\-\-file=\fP)
Start the service \fIformula\fP immediately and register it to launch at login (or boot)\.
.TP
[\fBsudo\fP] \fBbrew services stop\fP (\fIformula\fP|\fB\-\-all\fP)
Stop the service \fIformula\fP immediately and unregister it from launching at login (or boot)\.
.TP
[\fBsudo\fP] \fBbrew services kill\fP (\fIformula\fP|\fB\-\-all\fP)
Stop the service \fIformula\fP immediately but keep it registered to launch at login (or boot)\.
.TP
[\fBsudo\fP] \fBbrew services restart\fP (\fIformula\fP|\fB\-\-all\fP)
Stop (if necessary) and start the service \fIformula\fP immediately and register it to launch at login (or boot)\.
.TP
[\fBsudo\fP] \fBbrew services cleanup\fP
Remove all unused services\.
.TP
\fB\-\-file\fP
Use the service file from this location to \fBstart\fP the service\.
.TP
\fB\-\-sudo\-service\-user\fP
When run as root on macOS, run the service(s) as this user\.
.TP
\fB\-\-all\fP
Run \fIsubcommand\fP on all services\.
.TP
\fB\-\-json\fP
Output as JSON\.
.TP
\fB\-\-no\-wait\fP
Don\[u2019]t wait for \fBstop\fP to finish stopping the service\.
.SS "\fBtest\-bot\fP \fR[\fIoptions\fP] \fR[\fIformula\fP]"
Tests the full lifecycle of a Homebrew change to a tap (Git repository)\. For example, for a GitHub Actions pull request that changes a formula \fBbrew test\-bot\fP will ensure the system is cleaned and set up to test the formula, install the formula, run various tests and checks on it, bottle (package) the binaries and test formulae that depend on it to ensure they aren\[u2019]t broken by these changes\.
.P
Only supports GitHub Actions as a CI provider\. This is because Homebrew uses GitHub Actions and it\[u2019]s freely available for public and private use with macOS and Linux workers\.
.TP
\fB\-\-dry\-run\fP
Print what would be done rather than doing it\.
.TP
\fB\-\-cleanup\fP
Clean all state from the Homebrew directory\. Use with care!
.TP
\fB\-\-skip\-setup\fP
Don\[u2019]t check if the local system is set up correctly\.
.TP
\fB\-\-build\-from\-source\fP
Build from source rather than building bottles\.
.TP
\fB\-\-build\-dependents\-from\-source\fP
Build dependents from source rather than testing bottles\.
.TP
\fB\-\-junit\fP
generate a JUnit XML test results file\.
.TP
\fB\-\-keep\-old\fP
Run \fBbrew bottle \-\-keep\-old\fP to build new bottles for a single platform\.
.TP
\fB\-\-skip\-relocation\fP
Run \fBbrew bottle \-\-skip\-relocation\fP to build new bottles that don\[u2019]t require relocation\.
.TP
\fB\-\-only\-json\-tab\fP
Run \fBbrew bottle \-\-only\-json\-tab\fP to build new bottles that do not contain a tab\.
.TP
\fB\-\-local\fP
Ask Homebrew to write verbose logs under \fB\&\./logs/\fP and set \fB$HOME\fP to \fB\&\./home/\fP
.TP
\fB\-\-tap\fP
Use the Git repository of the given tap\. Defaults to the core tap for syntax checking\.
.TP
\fB\-\-fail\-fast\fP
Immediately exit on a failing step\.
.TP
\fB\-v\fP, \fB\-\-verbose\fP
Print test step output in real time\. Has the side effect of passing output as raw bytes instead of re\-encoding in UTF\-8\.
.TP
\fB\-\-test\-default\-formula\fP
Use a default testing formula when not building a tap and no other formulae are specified\.
.TP
\fB\-\-root\-url\fP
Use the specified \fIURL\fP as the root of the bottle\[u2019]s URL instead of Homebrew\[u2019]s default\.
.TP
\fB\-\-git\-name\fP
Set the Git author/committer names to the given name\.
.TP
\fB\-\-git\-email\fP
Set the Git author/committer email to the given email\.
.TP
\fB\-\-publish\fP
Publish the uploaded bottles\.
.TP
\fB\-\-skip\-online\-checks\fP
Don\[u2019]t pass \fB\-\-online\fP to \fBbrew audit\fP and skip \fBbrew livecheck\fP\&\.
.TP
\fB\-\-skip\-new\fP
Don\[u2019]t pass \fB\-\-new\fP to \fBbrew audit\fP for new formulae\.
.TP
\fB\-\-skip\-new\-strict\fP
Don\[u2019]t pass \fB\-\-strict\fP to \fBbrew audit\fP for new formulae\.
.TP
\fB\-\-skip\-dependents\fP
Don\[u2019]t test any dependents\.
.TP
\fB\-\-skip\-livecheck\fP
Don\[u2019]t test livecheck\.
.TP
\fB\-\-skip\-recursive\-dependents\fP
Only test the direct dependents\.
.TP
\fB\-\-skip\-checksum\-only\-audit\fP
Don\[u2019]t audit checksum\-only changes\.
.TP
\fB\-\-skip\-stable\-version\-audit\fP
Don\[u2019]t audit the stable version\.
.TP
\fB\-\-skip\-revision\-audit\fP
Don\[u2019]t audit the revision\.
.TP
\fB\-\-only\-cleanup\-before\fP
Only run the pre\-cleanup step\. Needs \fB\-\-cleanup\fP\&\.
.TP
\fB\-\-only\-setup\fP
Only run the local system setup check step\.
.TP
\fB\-\-only\-tap\-syntax\fP
Only run the tap syntax check step\.
.TP
\fB\-\-stable\fP
Only run the tap syntax checks needed on stable brew\.
.TP
\fB\-\-only\-formulae\fP
Only run the formulae steps\.
.TP
\fB\-\-only\-formulae\-detect\fP
Only run the formulae detection steps\.
.TP
\fB\-\-only\-formulae\-dependents\fP
Only run the formulae dependents steps\.
.TP
\fB\-\-only\-bottles\-fetch\fP
Only run the bottles fetch steps\. This optional post\-upload test checks that all the bottles were uploaded correctly\. It is not run unless requested and only needs to be run on a single machine\. The bottle commit to be tested must be on the tested branch\.
.TP
\fB\-\-only\-cleanup\-after\fP
Only run the post\-cleanup step\. Needs \fB\-\-cleanup\fP\&\.
.TP
\fB\-\-testing\-formulae\fP
Use these testing formulae rather than running the formulae detection steps\.
.TP
\fB\-\-added\-formulae\fP
Use these added formulae rather than running the formulae detection steps\.
.TP
\fB\-\-deleted\-formulae\fP
Use these deleted formulae rather than running the formulae detection steps\.
.TP
\fB\-\-skipped\-or\-failed\-formulae\fP
Use these skipped or failed formulae from formulae steps for a formulae dependents step\.
.SS "\fBunalias\fP \fIalias\fP \fR[\.\.\.]"
Remove aliases\.
.SS "\fBwhich\-formula\fP \fR[\fB\-\-explain\fP] \fIcommand\fP \fR[\.\.\.]"
Show which formula(e) provides the given command\.
.TP
\fB\-\-explain\fP
Output explanation of how to get \fIcommand\fP by installing one of the providing formulae\.
.SS "\fBwhich\-update\fP \fR[\fIoptions\fP] \fR[\fIdatabase\fP]"
Database update for \fBbrew which\-formula\fP\&\.
.TP
\fB\-\-stats\fP
Print statistics about the database contents (number of commands and formulae, list of missing formulae)\.
.TP
\fB\-\-commit\fP
Commit the changes using \fBgit\fP\&\.
.TP
\fB\-\-update\-existing\fP
Update database entries with outdated formula versions\.
.TP
\fB\-\-install\-missing\fP
Install and update formulae that are missing from the database and don\[u2019]t have bottles\.
.TP
\fB\-\-eval\-all\fP
Evaluate all installed taps, rather than just the core tap\.
.TP
\fB\-\-max\-downloads\fP
Specify a maximum number of formulae to download and update\.
.SH "CUSTOM EXTERNAL COMMANDS"
Homebrew, like \fBgit\fP(1), supports external commands\. These are executable scripts that reside somewhere in the \fBPATH\fP, named \fBbrew\-\fP\fIcmdname\fP or \fBbrew\-\fP\fIcmdname\fP\fB\&\.rb\fP, which can be invoked like \fBbrew\fP \fIcmdname\fP\&\. This allows you to create your own commands without modifying Homebrew\[u2019]s internals\.
.P
Instructions for creating your own commands can be found in the docs: 
.UR https://docs\.brew\.sh/External\-Commands
.UE
.SH "SPECIFYING FORMULAE"
Many Homebrew commands accept one or more \fIformula\fP arguments\. These arguments can take several different forms:
.IP \(bu 4
The name of a formula: e\.g\. \fBgit\fP, \fBnode\fP, \fBwget\fP\&\.
.IP \(bu 4
The fully\-qualified name of a tapped formula: Sometimes a formula from a tapped repository may conflict with one in \fBhomebrew/core\fP\&\. You can still access these formulae by using a special syntax, e\.g\. \fBhomebrew/dupes/vim\fP or \fBhomebrew/versions/node4\fP\&\.
.IP \(bu 4
An arbitrary file: Homebrew can install formulae from a local path\. It can point to either a formula file or a bottle\. Prefix relative paths with \fB\&\./\fP to prevent them from being interpreted as a formula or tap name\.
.SH "SPECIFYING CASKS"
Many Homebrew Cask commands accept one or more \fIcask\fP arguments\. These can be specified the same way as the \fIformula\fP arguments described in \fBSPECIFYING FORMULAE\fP above\.
.SH "ENVIRONMENT"
Note that environment variables must have a value set to be detected\. For example, run \fBexport HOMEBREW_NO_INSECURE_REDIRECT=1\fP rather than just \fBexport HOMEBREW_NO_INSECURE_REDIRECT\fP\&\.
.P
\fBHOMEBREW_*\fP environment variables can also be set in Homebrew\[u2019]s environment files:
.IP \(bu 4
\fB/etc/homebrew/brew\.env\fP (system\-wide)
.IP \(bu 4
\fB$HOMEBREW_PREFIX/etc/homebrew/brew\.env\fP (prefix\-specific)
.IP \(bu 4
\fB$XDG_CONFIG_HOME/homebrew/brew\.env\fP if \fB$XDG_CONFIG_HOME\fP is set or \fB$HOME/\.homebrew/brew\.env\fP otherwise (user\-specific)
.P
User\-specific environment files take precedence over prefix\-specific files and prefix\-specific files take precedence over system\-wide files (unless \fBHOMEBREW_SYSTEM_ENV_TAKES_PRIORITY\fP is set, see below)\.
.P
Note that these files do not support shell variable expansion e\.g\. \fB$HOME\fP or command execution e\.g\. \fB$(cat file)\fP\&\.
.TP
\fBHOMEBREW_ALLOWED_TAPS\fP
A space\-separated list of taps\. Homebrew will refuse to install a formula unless it and all of its dependencies are in an official tap or in a tap on this list\.
.TP
\fBHOMEBREW_API_AUTO_UPDATE_SECS\fP
Check Homebrew\[u2019]s API for new formulae or cask data every \fBHOMEBREW_API_AUTO_UPDATE_SECS\fP seconds\. Alternatively, disable API auto\-update checks entirely with \fBHOMEBREW_NO_AUTO_UPDATE\fP\&\.
.RS
.P
\fIDefault:\fP \fB450\fP\&\.
.RE
.TP
\fBHOMEBREW_API_DOMAIN\fP
Use this URL as the download mirror for Homebrew JSON API\. If metadata files at that URL are temporarily unavailable, the default API domain will be used as a fallback mirror\.
.RS
.P
\fIDefault:\fP \fBhttps://formulae\.brew\.sh/api\fP\&\.
.RE
.TP
\fBHOMEBREW_ARCH\fP
Linux only: Pass this value to a type name representing the compiler\[u2019]s \fB\-march\fP option\.
.RS
.P
\fIDefault:\fP \fBnative\fP\&\.
.RE
.TP
\fBHOMEBREW_ARTIFACT_DOMAIN\fP
Prefix all download URLs, including those for bottles, with this value\. For example, \fBHOMEBREW_ARTIFACT_DOMAIN=http://localhost:8080\fP will cause a formula with the URL \fBhttps://example\.com/foo\.tar\.gz\fP to instead download from \fBhttp://localhost:8080/https://example\.com/foo\.tar\.gz\fP\&\. Bottle URLs however, have their domain replaced with this prefix\. This results in e\.g\. \fBhttps://ghcr\.io/v2/homebrew/core/gettext/manifests/0\.21\fP to instead be downloaded from \fBhttp://localhost:8080/v2/homebrew/core/gettext/manifests/0\.21\fP
.TP
\fBHOMEBREW_ARTIFACT_DOMAIN_NO_FALLBACK\fP
If \fBHOMEBREW_ARTIFACT_DOMAIN\fP and \fBHOMEBREW_ARTIFACT_DOMAIN_NO_FALLBACK\fP are both set, if the request to \fBHOMEBREW_ARTIFACT_DOMAIN\fP fails then it Homebrew will error rather than trying any other/default URLs\.
.TP
\fBHOMEBREW_AUTO_UPDATE_SECS\fP
Run \fBbrew update\fP once every \fBHOMEBREW_AUTO_UPDATE_SECS\fP seconds before some commands, e\.g\. \fBbrew install\fP, \fBbrew upgrade\fP and \fBbrew tap\fP\&\. Alternatively, disable auto\-update entirely with \fBHOMEBREW_NO_AUTO_UPDATE\fP\&\.
.RS
.P
\fIDefault:\fP \fB86400\fP (24 hours), \fB3600\fP (1 hour) if a developer command has been run or \fB300\fP (5 minutes) if \fBHOMEBREW_NO_INSTALL_FROM_API\fP is set\.
.RE
.TP
\fBHOMEBREW_BAT\fP
If set, use \fBbat\fP for the \fBbrew cat\fP command\.
.TP
\fBHOMEBREW_BAT_CONFIG_PATH\fP
Use this as the \fBbat\fP configuration file\.
.RS
.P
\fIDefault:\fP \fB$BAT_CONFIG_PATH\fP\&\.
.RE
.TP
\fBHOMEBREW_BAT_THEME\fP
Use this as the \fBbat\fP theme for syntax highlighting\.
.RS
.P
\fIDefault:\fP \fB$BAT_THEME\fP\&\.
.RE
.TP
\fBHOMEBREW_BOOTSNAP\fP
If set, use Bootsnap to speed up repeated \fBbrew\fP calls\. A no\-op when using Homebrew\[u2019]s vendored, relocatable Ruby on macOS (as it doesn\[u2019]t work)\.
.TP
\fBHOMEBREW_BOTTLE_DOMAIN\fP
Use this URL as the download mirror for bottles\. If bottles at that URL are temporarily unavailable, the default bottle domain will be used as a fallback mirror\. For example, \fBHOMEBREW_BOTTLE_DOMAIN=http://localhost:8080\fP will cause all bottles to download from the prefix \fBhttp://localhost:8080/\fP\&\. If bottles are not available at \fBHOMEBREW_BOTTLE_DOMAIN\fP they will be downloaded from the default bottle domain\.
.RS
.P
\fIDefault:\fP \fBhttps://ghcr\.io/v2/homebrew/core\fP\&\.
.RE
.TP
\fBHOMEBREW_BREW_GIT_REMOTE\fP
Use this URL as the Homebrew/brew \fBgit\fP(1) remote\.
.RS
.P
\fIDefault:\fP \fBhttps://github\.com/Homebrew/brew\fP\&\.
.RE
.TP
\fBHOMEBREW_BROWSER\fP
Use this as the browser when opening project homepages\.
.RS
.P
\fIDefault:\fP \fB$BROWSER\fP or the OS\[u2019]s default browser\.
.RE
.TP
\fBHOMEBREW_BUNDLE_USER_CACHE\fP
If set, use this directory as the \fBbundle\fP(1) user cache\.
.TP
\fBHOMEBREW_CACHE\fP
Use this directory as the download cache\.
.RS
.P
\fIDefault:\fP macOS: \fB$HOME/Library/Caches/Homebrew\fP, Linux: \fB$XDG_CACHE_HOME/Homebrew\fP or \fB$HOME/\.cache/Homebrew\fP\&\.
.RE
.TP
\fBHOMEBREW_CASK_OPTS\fP
Append these options to all \fBcask\fP commands\. All \fB\-\-*dir\fP options, \fB\-\-language\fP, \fB\-\-require\-sha\fP, \fB\-\-no\-quarantine\fP and \fB\-\-no\-binaries\fP are supported\. For example, you might add something like the following to your \fB~/\.profile\fP, \fB~/\.bash_profile\fP, or \fB~/\.zshenv\fP:
.RS
.P
\fBexport HOMEBREW_CASK_OPTS="\-\-appdir=~/Applications \-\-fontdir=/Library/Fonts"\fP
.RE
.TP
\fBHOMEBREW_CLEANUP_MAX_AGE_DAYS\fP
Cleanup all cached files older than this many days\.
.RS
.P
\fIDefault:\fP \fB120\fP\&\.
.RE
.TP
\fBHOMEBREW_CLEANUP_PERIODIC_FULL_DAYS\fP
If set, \fBbrew install\fP, \fBbrew upgrade\fP and \fBbrew reinstall\fP will cleanup all formulae when this number of days has passed\.
.RS
.P
\fIDefault:\fP \fB30\fP\&\.
.RE
.TP
\fBHOMEBREW_COLOR\fP
If set, force colour output on non\-TTY outputs\.
.TP
\fBHOMEBREW_CORE_GIT_REMOTE\fP
Use this URL as the Homebrew/homebrew\-core \fBgit\fP(1) remote\.
.RS
.P
\fIDefault:\fP \fBhttps://github\.com/Homebrew/homebrew\-core\fP\&\.
.RE
.TP
\fBHOMEBREW_CURLRC\fP
If set to an absolute path (i\.e\. beginning with \fB/\fP), pass it with \fB\-\-config\fP when invoking \fBcurl\fP(1)\. If set but \fInot\fP a valid path, do not pass \fB\-\-disable\fP, which disables the use of \fB\&\.curlrc\fP\&\.
.TP
\fBHOMEBREW_CURL_PATH\fP
Linux only: Set this value to a new enough \fBcurl\fP executable for Homebrew to use\.
.RS
.P
\fIDefault:\fP \fBcurl\fP\&\.
.RE
.TP
\fBHOMEBREW_CURL_RETRIES\fP
Pass the given retry count to \fB\-\-retry\fP when invoking \fBcurl\fP(1)\.
.RS
.P
\fIDefault:\fP \fB3\fP\&\.
.RE
.TP
\fBHOMEBREW_CURL_VERBOSE\fP
If set, pass \fB\-\-verbose\fP when invoking \fBcurl\fP(1)\.
.TP
\fBHOMEBREW_DEBUG\fP
If set, always assume \fB\-\-debug\fP when running commands\.
.TP
\fBHOMEBREW_DEVELOPER\fP
If set, tweak behaviour to be more relevant for Homebrew developers (active or budding) by e\.g\. turning warnings into errors\.
.TP
\fBHOMEBREW_DISABLE_LOAD_FORMULA\fP
If set, refuse to load formulae\. This is useful when formulae are not trusted (such as in pull requests)\.
.TP
\fBHOMEBREW_DISPLAY\fP
Use this X11 display when opening a page in a browser, for example with \fBbrew home\fP\&\. Primarily useful on Linux\.
.RS
.P
\fIDefault:\fP \fB$DISPLAY\fP\&\.
.RE
.TP
\fBHOMEBREW_DISPLAY_INSTALL_TIMES\fP
If set, print install times for each formula at the end of the run\.
.TP
\fBHOMEBREW_DOCKER_REGISTRY_BASIC_AUTH_TOKEN\fP
Use this base64 encoded username and password for authenticating with a Docker registry proxying GitHub Packages\. If \fBHOMEBREW_DOCKER_REGISTRY_TOKEN\fP is set, it will be used instead\.
.TP
\fBHOMEBREW_DOCKER_REGISTRY_TOKEN\fP
Use this bearer token for authenticating with a Docker registry proxying GitHub Packages\. Preferred over \fBHOMEBREW_DOCKER_REGISTRY_BASIC_AUTH_TOKEN\fP\&\.
.TP
\fBHOMEBREW_EDITOR\fP
Use this editor when editing a single formula, or several formulae in the same directory\.
.RS
.P
\fINote:\fP \fBbrew edit\fP will open all of Homebrew as discontinuous files and directories\. Visual Studio Code can handle this correctly in project mode, but many editors will do strange things in this case\.
.P
\fIDefault:\fP \fB$EDITOR\fP or \fB$VISUAL\fP\&\.
.RE
.TP
\fBHOMEBREW_EVAL_ALL\fP
If set, \fBbrew\fP commands evaluate all formulae and casks, executing their arbitrary code, by default without requiring \fB\-\-eval\-all\fP\&\. Required to cache formula and cask descriptions\.
.TP
\fBHOMEBREW_FAIL_LOG_LINES\fP
Output this many lines of output on formula \fBsystem\fP failures\.
.RS
.P
\fIDefault:\fP \fB15\fP\&\.
.RE
.TP
\fBHOMEBREW_FORBIDDEN_CASKS\fP
A space\-separated list of casks\. Homebrew will refuse to install a cask if it or any of its dependencies is on this list\.
.TP
\fBHOMEBREW_FORBIDDEN_FORMULAE\fP
A space\-separated list of formulae\. Homebrew will refuse to install a formula or cask if it or any of its dependencies is on this list\.
.TP
\fBHOMEBREW_FORBIDDEN_LICENSES\fP
A space\-separated list of licenses\. Homebrew will refuse to install a formula if it or any of its dependencies has a license on this list\.
.TP
\fBHOMEBREW_FORBIDDEN_OWNER\fP
The person who has set any \fBHOMEBREW_FORBIDDEN_*\fP variables\.
.RS
.P
\fIDefault:\fP \fByou\fP\&\.
.RE
.TP
\fBHOMEBREW_FORBIDDEN_OWNER_CONTACT\fP
How to contact the \fBHOMEBREW_FORBIDDEN_OWNER\fP, if set and necessary\.
.TP
\fBHOMEBREW_FORBIDDEN_TAPS\fP
A space\-separated list of taps\. Homebrew will refuse to install a formula if it or any of its dependencies is in a tap on this list\.
.TP
\fBHOMEBREW_FORCE_BREWED_CA_CERTIFICATES\fP
If set, always use a Homebrew\-installed \fBca\-certificates\fP rather than the system version\. Automatically set if the system version is too old\.
.TP
\fBHOMEBREW_FORCE_BREWED_CURL\fP
If set, always use a Homebrew\-installed \fBcurl\fP(1) rather than the system version\. Automatically set if the system version of \fBcurl\fP is too old\.
.TP
\fBHOMEBREW_FORCE_BREWED_GIT\fP
If set, always use a Homebrew\-installed \fBgit\fP(1) rather than the system version\. Automatically set if the system version of \fBgit\fP is too old\.
.TP
\fBHOMEBREW_FORCE_VENDOR_RUBY\fP
If set, always use Homebrew\[u2019]s vendored, relocatable Ruby version even if the system version of Ruby is new enough\.
.TP
\fBHOMEBREW_FORMULA_BUILD_NETWORK\fP
If set, controls network access to the sandbox for formulae builds\. Overrides any controls set through DSL usage inside formulae\. Must be \fBallow\fP or \fBdeny\fP\&\. If no value is set through this environment variable or DSL usage, the default behavior is \fBallow\fP\&\.
.TP
\fBHOMEBREW_FORMULA_POSTINSTALL_NETWORK\fP
If set, controls network access to the sandbox for formulae postinstall\. Overrides any controls set through DSL usage inside formulae\. Must be \fBallow\fP or \fBdeny\fP\&\. If no value is set through this environment variable or DSL usage, the default behavior is \fBallow\fP\&\.
.TP
\fBHOMEBREW_FORMULA_TEST_NETWORK\fP
If set, controls network access to the sandbox for formulae test\. Overrides any controls set through DSL usage inside formulae\. Must be \fBallow\fP or \fBdeny\fP\&\. If no value is set through this environment variable or DSL usage, the default behavior is \fBallow\fP\&\.
.TP
\fBHOMEBREW_GITHUB_API_TOKEN\fP
Use this personal access token for the GitHub API, for features such as \fBbrew search\fP\&\. You can create one at 
.UR https://github\.com/settings/tokens
.UE \&\. If set, GitHub will allow you a greater number of API requests\. For more information, see: 
.UR https://docs\.github\.com/en/rest/overview/rate\-limits\-for\-the\-rest\-api
.UE
.RS
.P
\fINote:\fP Homebrew doesn\[u2019]t require permissions for any of the scopes, but some developer commands may require additional permissions\.
.RE
.TP
\fBHOMEBREW_GITHUB_PACKAGES_TOKEN\fP
Use this GitHub personal access token when accessing the GitHub Packages Registry (where bottles may be stored)\.
.TP
\fBHOMEBREW_GITHUB_PACKAGES_USER\fP
Use this username when accessing the GitHub Packages Registry (where bottles may be stored)\.
.TP
\fBHOMEBREW_GIT_EMAIL\fP
Set the Git author and committer email to this value\.
.TP
\fBHOMEBREW_GIT_NAME\fP
Set the Git author and committer name to this value\.
.TP
\fBHOMEBREW_GIT_PATH\fP
Linux only: Set this value to a new enough \fBgit\fP executable for Homebrew to use\.
.RS
.P
\fIDefault:\fP \fBgit\fP\&\.
.RE
.TP
\fBHOMEBREW_INSTALL_BADGE\fP
Print this text before the installation summary of each successful build\.
.RS
.P
\fIDefault:\fP The \[u201c]Beer Mug\[u201d] emoji\.
.RE
.TP
\fBHOMEBREW_LIVECHECK_WATCHLIST\fP
Consult this file for the list of formulae to check by default when no formula argument is passed to \fBbrew livecheck\fP\&\.
.RS
.P
\fIDefault:\fP \fB$XDG_CONFIG_HOME/homebrew/livecheck_watchlist\.txt\fP if \fB$XDG_CONFIG_HOME\fP is set or \fB$HOME/\.homebrew/livecheck_watchlist\.txt\fP otherwise\.
.RE
.TP
\fBHOMEBREW_LOGS\fP
Use this directory to store log files\.
.RS
.P
\fIDefault:\fP macOS: \fB$HOME/Library/Logs/Homebrew\fP, Linux: \fB$XDG_CACHE_HOME/Homebrew/Logs\fP or \fB$HOME/\.cache/Homebrew/Logs\fP\&\.
.RE
.TP
\fBHOMEBREW_MAKE_JOBS\fP
Use this value as the number of parallel jobs to run when building with \fBmake\fP(1)\.
.RS
.P
\fIDefault:\fP The number of available CPU cores\.
.RE
.TP
\fBHOMEBREW_NO_ANALYTICS\fP
If set, do not send analytics\. Google Analytics were destroyed\. For more information, see: 
.UR https://docs\.brew\.sh/Analytics
.UE
.TP
\fBHOMEBREW_NO_AUTOREMOVE\fP
If set, calls to \fBbrew cleanup\fP and \fBbrew uninstall\fP will not automatically remove unused formula dependents\.
.TP
\fBHOMEBREW_NO_AUTO_UPDATE\fP
If set, do not automatically update before running some commands, e\.g\. \fBbrew install\fP, \fBbrew upgrade\fP and \fBbrew tap\fP\&\. Preferably, run this less often by setting \fBHOMEBREW_AUTO_UPDATE_SECS\fP to a value higher than the default\. Note that setting this and e\.g\. tapping new taps may result in a broken configuration\. Please ensure you always run \fBbrew update\fP before reporting any issues\.
.TP
\fBHOMEBREW_NO_BOOTSNAP\fP
If set, do not use Bootsnap to speed up repeated \fBbrew\fP calls\.
.TP
\fBHOMEBREW_NO_CLEANUP_FORMULAE\fP
A comma\-separated list of formulae\. Homebrew will refuse to clean up or autoremove a formula if it appears on this list\.
.TP
\fBHOMEBREW_NO_COLOR\fP
If set, do not print text with colour added\.
.RS
.P
\fIDefault:\fP \fB$NO_COLOR\fP\&\.
.RE
.TP
\fBHOMEBREW_NO_EMOJI\fP
If set, do not print \fBHOMEBREW_INSTALL_BADGE\fP on a successful build\.
.TP
\fBHOMEBREW_NO_ENV_HINTS\fP
If set, do not print any hints about changing Homebrew\[u2019]s behaviour with environment variables\.
.TP
\fBHOMEBREW_NO_GITHUB_API\fP
If set, do not use the GitHub API, e\.g\. for searches or fetching relevant issues after a failed install\.
.TP
\fBHOMEBREW_NO_INSECURE_REDIRECT\fP
If set, forbid redirects from secure HTTPS to insecure HTTP\.
.RS
.P
\fINote:\fP while ensuring your downloads are fully secure, this is likely to cause from\-source SourceForge, some GNU & GNOME\-hosted formulae to fail to download\.
.RE
.TP
\fBHOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK\fP
If set, do not check for broken linkage of dependents or outdated dependents after installing, upgrading or reinstalling formulae\. This will result in fewer dependents (and their dependencies) being upgraded or reinstalled but may result in more breakage from running \fBbrew install\fP \fIformula\fP or \fBbrew upgrade\fP \fIformula\fP\&\.
.TP
\fBHOMEBREW_NO_INSTALL_CLEANUP\fP
If set, \fBbrew install\fP, \fBbrew upgrade\fP and \fBbrew reinstall\fP will never automatically cleanup installed/upgraded/reinstalled formulae or all formulae every \fBHOMEBREW_CLEANUP_PERIODIC_FULL_DAYS\fP days\. Alternatively, \fBHOMEBREW_NO_CLEANUP_FORMULAE\fP allows specifying specific formulae to not clean up\.
.TP
\fBHOMEBREW_NO_INSTALL_FROM_API\fP
If set, do not install formulae and casks in homebrew/core and homebrew/cask taps using Homebrew\[u2019]s API and instead use (large, slow) local checkouts of these repositories\.
.TP
\fBHOMEBREW_NO_INSTALL_UPGRADE\fP
If set, \fBbrew install\fP \fIformula|cask\fP will not upgrade \fIformula|cask\fP if it is installed but outdated\.
.TP
\fBHOMEBREW_NO_UPDATE_REPORT_NEW\fP
If set, \fBbrew update\fP will not show the list of newly added formulae/casks\.
.TP
\fBHOMEBREW_PIP_INDEX_URL\fP
If set, \fBbrew install\fP \fIformula\fP will use this URL to download PyPI package resources\.
.RS
.P
\fIDefault:\fP \fBhttps://pypi\.org/simple\fP\&\.
.RE
.TP
\fBHOMEBREW_PRY\fP
If set, use Pry for the \fBbrew irb\fP command\.
.TP
\fBHOMEBREW_SIMULATE_MACOS_ON_LINUX\fP
If set, running Homebrew on Linux will simulate certain macOS code paths\. This is useful when auditing macOS formulae while on Linux\.
.TP
\fBHOMEBREW_SKIP_OR_LATER_BOTTLES\fP
If set along with \fBHOMEBREW_DEVELOPER\fP, do not use bottles from older versions of macOS\. This is useful in development on new macOS versions\.
.TP
\fBHOMEBREW_SORBET_RUNTIME\fP
If set, enable runtime typechecking using Sorbet\. Set by default for \fBHOMEBREW_DEVELOPER\fP or when running some developer commands\.
.TP
\fBHOMEBREW_SSH_CONFIG_PATH\fP
If set, Homebrew will use the given config file instead of \fB~/\.ssh/config\fP when fetching Git repositories over SSH\.
.RS
.P
\fIDefault:\fP \fB$HOME/\.ssh/config\fP
.RE
.TP
\fBHOMEBREW_SUDO_THROUGH_SUDO_USER\fP
If set, Homebrew will use the \fBSUDO_USER\fP environment variable to define the user to \fBsudo\fP(8) through when running \fBsudo\fP(8)\.
.TP
\fBHOMEBREW_SVN\fP
Use this as the \fBsvn\fP(1) binary\.
.RS
.P
\fIDefault:\fP A Homebrew\-built Subversion (if installed), or the system\-provided binary\.
.RE
.TP
\fBHOMEBREW_SYSTEM_ENV_TAKES_PRIORITY\fP
If set in Homebrew\[u2019]s system\-wide environment file (\fB/etc/homebrew/brew\.env\fP), the system\-wide environment file will be loaded last to override any prefix or user settings\.
.TP
\fBHOMEBREW_TEMP\fP
Use this path as the temporary directory for building packages\. Changing this may be needed if your system temporary directory and Homebrew prefix are on different volumes, as macOS has trouble moving symlinks across volumes when the target does not yet exist\. This issue typically occurs when using FileVault or custom SSD configurations\.
.RS
.P
\fIDefault:\fP macOS: \fB/private/tmp\fP, Linux: \fB/tmp\fP\&\.
.RE
.TP
\fBHOMEBREW_UPDATE_TO_TAG\fP
If set, always use the latest stable tag (even if developer commands have been run)\.
.TP
\fBHOMEBREW_UPGRADE_GREEDY\fP
If set, pass \fB\-\-greedy\fP to all cask upgrade commands\.
.TP
\fBHOMEBREW_VERBOSE\fP
If set, always assume \fB\-\-verbose\fP when running commands\.
.TP
\fBHOMEBREW_VERBOSE_USING_DOTS\fP
If set, verbose output will print a \fB\&\.\fP no more than once a minute\. This can be useful to avoid long\-running Homebrew commands being killed due to no output\.
.TP
\fBHOMEBREW_VERIFY_ATTESTATIONS\fP
If set, Homebrew will use the \fBgh\fP tool to verify cryptographic attestations of build provenance for bottles from homebrew\-core\.
.TP
\fBSUDO_ASKPASS\fP
If set, pass the \fB\-A\fP option when calling \fBsudo\fP(8)\.
.TP
\fBall_proxy\fP
Use this SOCKS5 proxy for \fBcurl\fP(1), \fBgit\fP(1) and \fBsvn\fP(1) when downloading through Homebrew\.
.TP
\fBftp_proxy\fP
Use this FTP proxy for \fBcurl\fP(1), \fBgit\fP(1) and \fBsvn\fP(1) when downloading through Homebrew\.
.TP
\fBhttp_proxy\fP
Use this HTTP proxy for \fBcurl\fP(1), \fBgit\fP(1) and \fBsvn\fP(1) when downloading through Homebrew\.
.TP
\fBhttps_proxy\fP
Use this HTTPS proxy for \fBcurl\fP(1), \fBgit\fP(1) and \fBsvn\fP(1) when downloading through Homebrew\.
.TP
\fBno_proxy\fP
A comma\-separated list of hostnames and domain names excluded from proxying by \fBcurl\fP(1), \fBgit\fP(1) and \fBsvn\fP(1) when downloading through Homebrew\.
.SH "USING HOMEBREW BEHIND A PROXY"
Set the \fBhttp_proxy\fP, \fBhttps_proxy\fP, \fBall_proxy\fP, \fBftp_proxy\fP and/or \fBno_proxy\fP environment variables documented above\.
.P
For example, to use an unauthenticated HTTP or SOCKS5 proxy:
.sp
.RS 4
.EX
export http_proxy=http://$HOST:$PORT

export all_proxy=socks5://$HOST:$PORT
.EE
.RE
.P
And for an authenticated HTTP proxy:
.sp
.RS 4
.EX
export http_proxy=http://$USER:$PASSWORD@$HOST:$PORT
.EE
.RE
.SH "SEE ALSO"
Homebrew Documentation: 
.UR https://docs\.brew\.sh
.UE
.P
Homebrew API: 
.UR https://rubydoc\.brew\.sh
.UE
.P
\fBgit\fP(1), \fBgit\-log\fP(1)
.SH "AUTHORS"
Homebrew\[u2019]s Project Leader is Mike McQuaid\.
.P
Homebrew\[u2019]s Project Leadership Committee is Colin Dean, Issy Long, Mike McQuaid, Patrick Linnane and Vanessa Gennarelli\.
.P
Homebrew\[u2019]s Technical Steering Committee is Bo Anderson, FX Coudert, Michka Popoff, Mike McQuaid and Rylan Polster\.
.P
Homebrew\[u2019]s maintainers are Alexander Bayandin, Bevan Kay, Bo Anderson, Branch Vincent, Caleb Xu, Carlo Cabrera, David Baumgold, Douglas Eichelberger, Dustin Rodrigues, Eric Knibbe, FX Coudert, Issy Long, Justin Krehel, Markus Reiter, Miccal Matthews, Michael Cho, Michka Popoff, Mike McQuaid, Nanda H Krishna, Patrick Linnane, Razvan Azamfirei, Rui Chen, Ruoyu Zhong, Rylan Polster, Sam Ford, Sean Molenaar, Thierry Moisan, Timothy Sutton and William Woodruff\.
.P
Former maintainers with significant contributions include Misty De Méo, Shaun Jackman, Vítor Galvão, Claudia Pellegrino, Seeker, Jan Viljanen, JCount, commitay, Dominyk Tiller, Tim Smith, Baptiste Fontaine, Xu Cheng, Martin Afanasjew, Brett Koonce, Charlie Sharpsteen, Jack Nagel, Adam Vandenberg, Andrew Janke, Alex Dunn, neutric, Tomasz Pajor, Uladzislau Shablinski, Alyssa Ross, ilovezfs, Chongyu Zhu and Homebrew\[u2019]s creator: Max Howell\.
.SH "BUGS"
See our issues on GitHub:
.TP
\fBHomebrew/brew\fP
.UR https://github\.com/Homebrew/brew/issues
.UE
.TP
\fBHomebrew/homebrew\-core\fP
.UR https://github\.com/Homebrew/homebrew\-core/issues
.UE
.TP
\fBHomebrew/homebrew\-cask\fP
.UR https://github\.com/Homebrew/homebrew\-cask/issues
.UE
